
Dropzone.autoDiscover = false;

$(function() {

    //$(document).on('change', '.choose-file-media', function() {
        //if($(this).is('checked')) {
            //$('.useFile').prop('disabled', true);
        //}
    //});
	
	$(document).on('click', '.useFile', function() {
		var boxID 			= $(this).attr('data-id');
		var ImageId 		= $('[name="checkUseImage"]:checked').val();
		var ImageLink 		= $('[name="checkUseImage"]:checked').attr('data-path');
		var ImageFullLink 	= $('[name="checkUseImage"]:checked').attr('data-full-path');
		//$('.choose-image-review').html('<div class="form-group"><input type="hidden" name="chooseImagePost" value="'+ImageLink+'" /><img src="'+ImageFullLink+'" class="full-width" /></div>');
		$('.choose-image-review').html('<div class=" form-group form-data-input  form-text" data-type="input" data-name="'+boxID+'" data-key=""><input type="hidden" class="form-control" name="'+boxID+'" id="'+boxID+'" value="'+ImageLink+'"></div><div class="form-group"><img src="'+ImageFullLink+'" class="full-width" /></div>');
		$('#uploadBox').addClass('hide');
	})
	

    $(document).on('click', '.file-list-items', function() {
        $el = $(this).find('input[type="radio"]');
        if($el.is(":checked")) {
            $el.prop('checked', false);
        } else {
            $el.prop('checked', true);
        }
        
    });

    //Mở popup file manager
    $(document).on('click', '.btnAddMedia', function() {
		var boxID 	= $(this).attr('data-id');
		$('.useFile').attr('data-id', boxID);
        $('#uploadBox').removeClass('hide');
        var baseurl = parse_url([app_page, 'uploads', 'loadfolder', 0]); //Mặc định load những thư mục và file có folder_id == 0
        loadData({themes: app_themes}, baseurl, '.media', 'alert', 'media');


        //Using myDropzone
        var myDropzone = new Dropzone("#UploadImages", {
            url: app_url+'/admin/uploads/uploadimage',
            method: "POST",
            addRemoveLinks: true,
            parallelUploads: 1,
            uploadMultiple: false,
            autoProcessQueue: true,
            maxFiles: 1,
            headers: {
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            },
            init: function () {
                this.on('sending', function(file, xhr, formData){
                    var folder_id   = $('#hiddenFolderID').val() || 0;
                    formData.append('folder_id', folder_id);
                });
                this.on('success', function (file, response) {
                    data = response;
                    // modalCropImage('#modalCropImage', data.imagePath, data.imageName);
                    $('#imgCrop').attr('src', '../../../'+data.imagePath);
                    $('#imgCrop').attr('data-name', data.imageName);
                    var $button = $('<a href="#" class="js-open-cropper-modal" data-file-name="' + data.imageName + '">Crop & Upload</a>');
                    $(file.previewElement).append($button);
                    // if(data.status == 'success') {
                        // $('#modalCropImage').modal('show');
                    // }
                    // var modalID = addModalCrop(data.imagePath, data.imageName);
                    // $(modalID).modal('show').on("shown.bs.modal", function () {
                    //     var fileName = $('#imgCrop').attr('data-name');
                    //     var cropper = new Cropper(document.getElementById('imgCrop'), {
                    //         dragMode: 'move',
                    //         aspectRatio: 16 / 9,
                    //         autoCropArea: 1, //Khung cắt không full hình
                    //         restore: false,
                    //         guides: false, //Chia làm 9 ô trong khung cắt (Grid)
                    //         center: true,  //Đặt khung cắt nằm giữa hình
                    //         highlight: true, //Làm tối vùng ngoài khung cắt
                    //         cropBoxMovable: false, //Di chuyển khung cắt
                    //         cropBoxResizable: false, //Kéo cộng khung cắt
                    //         toggleDragModeOnDblclick: false, //Thay đổi khung cắt khi click đúp chuột
                    //     });
                });
            }
        });
            // $('#modalCropImage').on("shown.bs.modal", function () {
            //     var fileName = $('#imgCrop').attr('data-name');
            //     var cropper = new Cropper(document.getElementById('imgCrop'), {
            //         dragMode: 'move',
            //         aspectRatio: 16 / 9,
            //         autoCropArea: 1, //Khung cắt không full hình
            //         restore: false,
            //         guides: false, //Chia làm 9 ô trong khung cắt (Grid)
            //         center: true,  //Đặt khung cắt nằm giữa hình
            //         highlight: true, //Làm tối vùng ngoài khung cắt
            //         cropBoxMovable: false, //Di chuyển khung cắt
            //         cropBoxResizable: false, //Kéo cộng khung cắt
            //         toggleDragModeOnDblclick: false, //Thay đổi khung cắt khi click đúp chuột
            //     });
            //     var $this = $(this);
            //     $this.on('click', '.cropUpload', function () {
            //             // get cropped image data
            //             var blob = cropper.getCroppedCanvas().toDataURL();
            //             // transform it to Blob object
            //             var croppedFile = dataURItoBlob(blob);
            //             croppedFile.name = fileName;

            //             var files = myDropzone.getAcceptedFiles();
            //             for (var i = 0; i < files.length; i++) {
            //                 var file = files[i];
            //                 if (file.name === fileName) {
            //                     myDropzone.removeFile(file);
            //                 }
            //             }
            //             myDropzone.addFile(croppedFile);
            //             $this.modal('hide');
            //         })
            //         .on('click', '.rotate-right', function () {
            //             cropper.rotate(90);
            //         })
            //         .on('click', '.rotate-left', function () {
            //             cropper.rotate(-90);
            //         });
            //     });

        });


    });

    //Load file when click folder
    $(document).on('click', '.loadfile', function() {
        var folder_id   = $(this).attr('data-id');
        $('#hiddenFolderID').val(folder_id);
        var baseurl     = parse_url([app_page, 'uploads', 'loadfolder', folder_id]); //Mặc định load những thư mục và file có folder_id == 0
        loadData({themes: app_themes}, baseurl, '.media', 'alert', 'mediafile');
    });

    $('.media-close').on('click', function() {
        $('#uploadBox').addClass('hide');
    });

    $('.addFile').on('click', function() {
        $(this).addClass('hide');
        $('.progress').removeClass('hide');  //Thanh process uploads
        $('.dropzone-upload-media').removeClass('hide');
        $('.closeDropZone').removeClass('hide');
    });

    $('.closeDropZone').on('click', function() {
        $(this).addClass('hide');
		$('.progress').addClass('hide');  //Thanh process uploads
        $('.dropzone-upload-media').addClass('hide');
        $('.addFile').removeClass('hide');
    });

    $('.addFolder').on('click', function() {
        $('.addfolder-form').addClass('open');
        $('.media-addfolder-form').removeClass('hide');
    });

    $('.closeaddfolder').on('click', function() {
        $('.addfolder-form').removeClass('open');
        $('.media-addfolder-form').addClass('hide');
    });

    //Thêm folder
    $('.btnaddfolderaction').on('click', function() {
        var folder_id   = $('#hiddenFolderID').val();
        var folder_name = $('#mediaFolderName').val();
        addFolder('uploads/addfolder', folder_id, folder_name, '.errors');
    });


$('#UploadImages').on('click', '.js-open-cropper-modal', function (e) {
    e.preventDefault();
    var fileName = $(this).attr('data-file-name');

    // var modalTemplate =
    //     '<div class="modal fade" tabindex="-1" role="dialog">' +
    //     '<div class="modal-dialog modal-lg" role="document">' +
    //     '<div class="modal-content">' +
    //     '<div class="modal-header">' +
    //     '<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>' +
    //     '<h4 class="modal-title">Crop</h4>' +
    //     '</div>' +
    //     '<div class="modal-body">' +
    //     '<div class="image-container">' +
    //     '<img id="imgCrop" src="../../../public/uploads/' + fileName + '">' +
    //     '</div>' +
    //     '</div>' +
    //     '<div class="modal-footer">' +
    //     '<button type="button" class="btn btn-warning rotate-left"><span class="fa fa-rotate-left"></span></button>' +
    //     '<button type="button" class="btn btn-warning rotate-right"><span class="fa fa-rotate-right"></span></button>' +
    //     '<button type="button" class="btn btn-warning scale-x" data-value="-1"><span class="fa fa-arrows-h"></span></button>' +
    //     '<button type="button" class="btn btn-warning scale-y" data-value="-1"><span class="fa fa-arrows-v"></span></button>' +
    //     '<button type="button" class="btn btn-warning reset"><span class="fa fa-refresh"></span></button>' +
    //     '<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>' +
    //     '<button type="button" class="btn btn-primary crop-upload">Crop & upload</button>' +
    //     '</div>' +
    //     '</div>' +
    //     '</div>' +
    //     '</div>';

    var $cropperModal = $('#modalCropImage');

    $cropperModal.modal('show').on("shown.bs.modal", function () {
        var cropper = new Cropper(document.getElementById('imgCrop'), {
            autoCropArea: 1,
            movable: false,
            cropBoxResizable: true,
            rotatable: true
        });
        var $this = $(this);
        $this
            .on('click', '.crop-upload', function () {
                // get cropped image data
                var blob = cropper.getCroppedCanvas().toDataURL();
                // transform it to Blob object
                var croppedFile = dataURItoBlob(blob);
                croppedFile.name = fileName;

                var files = myDropzone.getAcceptedFiles();
                for (var i = 0; i < files.length; i++) {
                    var file = files[i];
                    if (file.name === fileName) {
                        myDropzone.removeFile(file);
                    }
                }
                myDropzone.addFile(croppedFile);
                $this.modal('hide');
            })
            .on('click', '.rotate-right', function () {
                cropper.rotate(90);
            })
            .on('click', '.rotate-left', function () {
                cropper.rotate(-90);
            })
            .on('click', '.reset', function () {
                cropper.reset();
            })
            .on('click', '.scale-x', function () {
                var $this = $(this);
                cropper.scaleX($this.data('value'));
                $this.data('value', -$this.data('value'));
            })
            .on('click', '.scale-y', function () {
                var $this = $(this);
                cropper.scaleY($this.data('value'));
                $this.data('value', -$this.data('value'));
            });
    });
});


// transform cropper dataURI output to a Blob which Dropzone accepts
var dataURItoBlob = function (dataURI) {
    var byteString = atob(dataURI.split(',')[1]);
    var ab = new ArrayBuffer(byteString.length);
    var ia = new Uint8Array(ab);
    for (var i = 0; i < byteString.length; i++) {
        ia[i] = byteString.charCodeAt(i);
    }
    return new Blob([ab], {type: 'image/jpeg'});
};

// Ý tưởng thực hiện
// Sau khi upload thành công thì hiện lên khung cắt
// -- Nếu tồn tại giá trị cắt, thì bắt buộc phải cắt, ko thì thôi (vd bài viết, sản phẩm, ....)

function modalCropImage(modalID, imagePath, imageName) {
    var modalID = addModalCrop(imagePath, imageName);
    $(modalID).modal('show').on("shown.bs.modal", function () {
        var fileName =$('#imgCrop').attr('data-name');
        var cropper = new Cropper(document.getElementById('imgCrop'), {
            dragMode: 'move',
            aspectRatio: 16 / 9,
            autoCropArea: 1, //Khung cắt không full hình
            restore: false,
            guides: false, //Chia làm 9 ô trong khung cắt (Grid)
            center: true,  //Đặt khung cắt nằm giữa hình
            highlight: true, //Làm tối vùng ngoài khung cắt
            cropBoxMovable: false, //Di chuyển khung cắt
            cropBoxResizable: false, //Kéo cộng khung cắt
            toggleDragModeOnDblclick: false, //Thay đổi khung cắt khi click đúp chuột
        });
        var $this = $(this);
        $this
            .on('click', '.crop-upload', function () {
                // get cropped image data
                var blob = cropper.getCroppedCanvas().toDataURL();
                // transform it to Blob object
                var croppedFile = dataURItoBlob(blob);
                croppedFile.name = fileName;

                var files = myDropzone.getAcceptedFiles();
                for (var i = 0; i < files.length; i++) {
                    var file = files[i];
                    if (file.name === fileName) {
                        myDropzone.removeFile(file);
                    }
                }
                myDropzone.addFile(croppedFile);
                $this.modal('hide');
            })
            .on('click', '.rotate-right', function () {
                cropper.rotate(90);
            })
            .on('click', '.rotate-left', function () {
                cropper.rotate(-90);
            });
        });
}

function addModalCrop(imageLink, imageName) {

    var imageLink = imageLink || '';
    var imageName = imageName || '';

    var modalCrop = '<div id="modalCropImage" class="modal in" data-easein="bounceIn"  data-target="#modalCropImage" tabindex="-1" role="dialog">'
                        +'<div class="modal-dialog modal-lg" role="document">'
                            +'<div class="modal-content">'
                                +'<div class="modal-header">' 
                                    +'<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>'
                                    +'<h4 class="modal-title">Crop</h4>'
                                +'</div>'
                                +'<div class="modal-body">'
                                    +'<div class="image-container">'
                                        +'<img id="imgCrop" src="../../../'+imageLink+'" data-name="'+imageName+'">'
                                    +'</div>'
                                +'</div>'
                                +'<div class="modal-footer">'
                                    +'<button type="button" class="btn btn-warning rotate-left"><span class="fa fa-rotate-left"></span></button>'
                                    +'<button type="button" class="btn btn-warning rotate-right"><span class="fa fa-rotate-right"></span></button>'
                                    +'<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>'
                                    +'<button type="button" class="btn btn-primary crop-upload">Hoàn thành</button>'
                                +'</div>'
                            +'</div>'
                        +'</div>'
                    +'</div>';

    return modalCrop;

}

function addFolder(baseurl, folder_id, folder_name, divid) {
    var boxid       = divid+'-alert';
    var boxerror    = divid+'-message';
    var url         = parse_url([app_url, app_page, baseurl]);
    var form_data   = new FormData();
    form_data.append('folder_id', folder_id);
    form_data.append('folder_name', folder_name);
    $.ajaxSetup({
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    });
    $.ajax({
        url: url,
        type: 'POST',
        data: form_data,
        contentType: false,
        cache: false,
        processData: false,
        beforeSend:function(){
            $(boxid).html('<div class="info"><i class="fa fa-spinner fa-pulse fa-1x fa-fw"></i> Đang xử lý. Chờ xíu...</div>');
        },
        success: function(response){
            data = response;
            $(boxid).fadeIn('slow').html('<div class="'+data.status+'">'+getIcon(data.status)+' '+data.alert+'</div>');
            if(typeof data.message !== 'undefined' && data.message.length > 0) {
                loadError(data.message, boxerror);
            }
            if(data.status == 'success') {
                hideMessage($defind_config_modal_error_box, $defind_config_time_alert);
            }
        }
    });
}