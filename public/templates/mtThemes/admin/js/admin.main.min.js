var count 				= 0;
var $count_click		= 1;
var $debug              = 1;

//CONFIG MODULE NAME
var $config_update_action   = 'update'; //update action
var $config_module_widget   = 'widget';

//================================================================================
//FIELD CONFIG
var $defind_config_field_type_define    = 'text'; //Đặt giá trị mặc định load field khi tải trang
var $defind_config_field_box_content	= '.autoload-modules-contents';
var $defind_config_form_data_get        = ['.form-data', '.form-detail'];

var $defind_config_field_box_groups    = '.field-group-contents'; //Tải DS các input Group

//================================================================================
//MODAL CONFIG
var $defind_config_modalbox         = '#open-modalbox';
var $defind_config_modal_content    = '.modal_content';
var $defind_config_modal_title		= '.modal-title';
var $defind_config_modal_button		= '.modal-button-action';
var $defind_config_modal_error_box  = '.modal';

var $defind_config_time_alert         = 5000;
var $defind_config_time_scroll        = 600;
var $defind_config_time_reload        = 1000;

//LOAD AUTO FUNCTION
var $autofunc_boxid     = '.show_alert';

//DEFINE VARIABLES
var $define_required    = 'input-required';

//DEFINE CONTENT
var $defind_config_choose   = 'Vui lòng chọn....';


function app_debug() {
    var check_debug = $debug || 0;
    result  = false;
    if(check_debug == 1) {
        result = true;
    }
    return result;
}

//Hàm lấy url
function get_url(params) {
    var result = new Array();
    var urlParams   = new URLSearchParams(window.location.search);
    var loadid      = urlParams.get('loadid') || '';
    result = {
        loadid: loadid
    };
    return result;
}

//================================================================================
//FORM CONFIG
//option, button, divid, title
function main_form(data, modalbox, boxid, buttons_data, button_boxid) {

    var boxid           = boxid || $defind_config_modal_content; //Nếu không khái báo thì modal_content default
    var modalbox        = modalbox;
    var button_boxid    = button_boxid || $defind_config_modal_button;

    var data_title      = data.title;
    var data_class      = data.class;
    var data_feilds     = data.feilds;
    var data_button     = data.buttons;

    // console.log(data_feilds);
    // return false;

    html_left   = '';
    html_right  = '';
    html  = '';
    $.each(data_feilds, function(i, v) {
        // html += show_form(i, v, '', '', data_class); //theo cách cũ
        html = show_form(i, v, '', '', data_class); //theo cách mới

        if(typeof v.column !== 'undefined' && v.column != '') {
            $(boxid+'-'+v.column).append(html);
        } else {
            $(boxid).append(html);
        }
        
    });

    if(modalbox != '') {
        showpopup(data_title, modalbox, '', boxid, data_button, button_boxid);
    }

    $('.multipleSelect').fastselect();

    useEditor();
    inputDateTime();
    
}

//XÓA ALERT BOX
function hideMessage(divid, time) {
    var time        = time || $defind_config_time_alert;
    var divid       = divid || $defind_config_modal_error_box;
    var boxid       = divid+'-alert';
    var boxerror    = divid+'-message';
    if(time > 0) {
        setTimeout(function() {
            $(boxid).html('');
            $(boxerror).html('');
            $(boxerror).removeClass('msg-error');
        }, time);
    } else {
        $(boxid).html('');
        $(boxerror).html('');
        $(boxerror).removeClass('msg-error');
    }
}

//SCROLL TO TOP
function scrollTop(boxid, values) {
    var values = values || 0;
    $(boxid).animate({ scrollTop: values }, $defind_config_time_scroll);
}

/**
 * HÀM KIỂM TRA VÀ SHOW GIÁ TRỊ FORM RA
 * type: Kiểm tra loại xem là 1 group hay là 1 input bình thường
 * rows: Nếu là group, thì xem đang duyệt qua tới dòng thứ mấy
 * Lưu ý: Nếu 2 name trong group là như nhau thì chỉ hiển thị 1 dòng thôi
 * actived: Cái nào sẽ mặc định được checked, áp dụng đối với radio và checkbox
 * input_value: custom value for radio or checkbox, Vì 2 đối tượng này có thể value và label khác nhau: vd: Label = Nam, value = 1
 * total_cols: Số lượng ô của nhóm cần phân
 * data_class: Class tổng truyền vào giống như title, form chạy cố định theo 1 class chính này.
 */
function show_form(i, v, type, datagroup, data_class) {
    var html        = '';
    var type        = type || '';
    var data_class  = data_class || 'form-data';
    var input_name  = '', input_id  = '', show_rows = '', input_modules='', input_label='', input_value='', input_actived='';
    var empty_class = '', row_class = '', data_key='', class_get='';
    var editor_class= '', editor_id = '', input_format='';
    input_label     = v.label || '';
    input_empty     = v.empty || '';
    input_class     = v.class || '';
    input_type      = v.type  || 'text';
    input_modules   = v.modules;
    input_value     = v.value;
    var input_placeholder   = v.placeholder || $defind_config_choose;
    var input_editor        = v.editor || '';
    var input_description   = v.description;
    var input_multiple      = v.multiple;
    var input_baseurl       = v.baseurl;
    var input_column       = v.column;
    var options = v.options;
    input_readonly  = v.readonly || ''; // fields readyonly
    input_actived   = v.actived || ''; // fields active, selected
    input_id        = i || ''; // fields id
    input_name      = i || '';

    data_key        = v.key || ''; //Nếu ô này khác rỗng, thì thêm div class=form-get
    if(data_key != '') {
        class_get   = data_class+'-get';
    }


    var input_change = v.change || '';
    
    empty_text      = ''; //Show text
    if(input_empty == true) {
        empty_text  = '<span class="cl-red italic">(*)</span>';
        empty_class = $define_required;
    }

    if(input_label != '') {
        input_title = '<label for="'+input_id+'">'+input_label+' '+empty_text+'</label>';
    } else {
        input_title = '';
    }

    //Xử lý để lấy dữ liệu form
    var form_input = data_class+'-input';
    if(input_modules == 'hidden') {
        var form_input = '';
    }

    var start_div   = '<div class="'+row_class+' form-group '+form_input+' '+class_get+' form-'+input_modules+' '+input_name+'_'+input_modules+'" data-type="'+input_modules+input_editor+'" data-name="'+input_name+'" data-key="'+data_key+'">';
    var end_div     = '</div>';

    html        += start_div;

    switch(input_modules) {
        case 'textarea':
            if(input_editor == 'editor') {
                editor_class    = 'editor';
                editor_id       = 'editor'+i; 
            }
            input_html      =   input_title
                                +'<textarea type="'+input_type+'" class="'+input_class+' '+empty_class+' '+editor_class+'" name="'+input_name+'" id="'+editor_id+'" '+input_readonly+' >'+input_value+'</textarea>';
            break;
        case 'select':
            var input_options = '';
            if(typeof options != 'undefined' && options.length > 0) {
                $.each(options, function(index, value) {
                    var option_name = '';
                    var option_value = '';
                    var option_selected     = value.selected || '';
                    if(value.value != undefined) {
                        option_name     = value.name;
                        option_value    = value.value;
                    } else {
                        option_name     = value;
                        option_value    = value;
                    }
                    input_options   += '<option '+option_selected+' value="'+option_value+'">'+option_name+'</option>';
                });
            }
            input_html  =   input_title
                                +'<select type="'+input_type+'" class="'+input_class+' '+empty_class+'" name="'+input_name+'" id="'+input_id+'" '+input_readonly+' onchange="'+input_change+'">'+input_options+'</select>';
            break;
        case 'checkbox':
            var input_options = '';
            if(typeof options != 'undefined' && options.length > 0) {
                $.each(options, function(index, value) {
                    var option_name = '';
                    var option_value = '';
                    var option_selected     = value.selected || '';
                    if(value.value != undefined) {
                        option_name     = value.name;
                        option_value    = value.value;
                    } else {
                        option_name     = value;
                        option_value    = value;
                    }
                    input_options   += '<div class="list-items">'
                                        +'<input type="radio" '+option_selected+' name="'+input_name+'" id="chk'+input_name+option_value+'" value="'+option_value+'">'
                                        +'<label for="chk'+input_name+option_value+'">'
                                            +'<span class="chkicon"></span> '+option_name
                                        +'</label>'
                                    +'</div>';
                });
            }
            input_html  =   input_title
                                +'<div class="radio-box">'
                                    +input_options
                                +'</div>'
            break;
        case 'radio':
            input_html  =   '<div class="'+input_modules+'-box">'
                                +'<input type="'+input_type+'" '+actived+' class="'+input_class+' '+empty_class+'" '+empty_class+' '+empty_class+' name="'+input_name+'" id="'+input_id+'" value="'+input_value+'" onchange="'+input_change+'" '+input_readonly+' />'
                                +input_title
                            +'</div>';
            break;
        case 'group':
            input_html  = '<div class="form-group">'+input_title+load_group(datagroup, input_class, input_modules)+'</div>';
            break;
        case 'image':
            input_html  = input_title
                    +'<input type="file" class="'+input_class+' '+empty_class+'" '+empty_class+' name="'+input_name+'" id="'+input_id+'" />';
            break;
        case 'chooseimage':
            input_html  = input_title
                    +'<div class="choose-image-box border relative align-center padding-5x"><div class="choose-image-review"></div><button type="button" class="btn btn-success btnAddMedia" data-id="'+input_name+'"><i class="fa fa-picture-o" aria-hidden="true"></i> Chọn hình ảnh</button></div>';
            break;
        case 'multipleselect':
            input_baseurl   = parse_url([app_url, input_baseurl]);
            input_html  = input_title
                    +'<input type="text" class="'+input_class+' '+empty_class+' multipleSelect" '+input_multiple+' name="'+input_name+'" value="" data-initial-value="" data-url="'+input_baseurl+'" placeholder="'+input_placeholder+'" />';
            break;
        case 'date':
        case 'datetime':
            input_class     = 'datepicker';
            input_id        = 'datepicker'+i;
            input_format    = 'dd/mm/yyyy hh:ii';
            if(input_modules == 'date') {
                input_format    = 'dd/mm/yyyy';
            }
            input_html  =   input_title
                                +'<div class="input-group date">'
                                    +'<div class="input-group-addon">'
                                        +'<i class="fa fa-calendar"></i>'
                                    +'</div>'
                                    +'<input type="datetime" class="form-control pull-right '+input_class+' '+empty_class+'" '+empty_class+' format="'+input_format+'" value="'+input_value+'" '+input_readonly+' onchange="'+input_change+'" name="'+input_name+'" id="'+input_id+'">'
                                +'</div>';
            break;
        case 'hidden':
            input_html  = ''; //vì trường hidden sẽ bỏ qua chỉ để lấy tiêu đề để config hiển thị ds thôi
            break;
        default:
            input_html  =   input_title
                                +'<input type="'+input_type+'" class="'+input_class+' '+empty_class+'" '+empty_class+' name="'+input_name+'" id="'+input_id+'" value="'+input_value+'" '+input_readonly+' onchange="'+input_change+'" />';
            break;
    }

    html += input_html+end_div;

    return html;
}

/**
 * HIỂN THỊ CÁC GIÁ TRỊ GROUP
 */
function load_group(data, boxid, type) {

    var button_type;
    var button_icon;
    var type = type || '';

    html = '<div class="group-box radio-group group-box-'+type+'">';

    $.each(data, function(i, v) {

        var show_label='', show_value='', group_value='', addr_value='', cols_class = '';
        var column  = v.column || 1;
        var class_cols  = v.class || '';
        var label   = v.label_custom != undefined ? v.label_custom : '';
        var input_value     = v.value_custom != undefined ? v.value_custom : '';
        var list    = v.items;
        var buttons = v.addbuttons || '';
        var actived = v.actived || '';
        var address = v.value || [];

        for (var j = 0; j < column; j++) {
            //Kiểm tra address
            addr_value='';
            if(address.length > 0) {
                if(typeof address[j] != 'undefined') {
                    addr_value  = Object.keys(address[j]).length !== 0 ? address[j].value : '';
                }
            }
            $.each(list, function(index, value) {
                if(label != '') {
                    show_label  = label[j]; // Lấy và hiển thị label custom (nhãn tùy chỉnh)                    
                }
                show_value  = (input_value[j] !== undefined && input_value[j] !== '') ? input_value[j] : show_label;
                html += show_form(index, value, type, j, show_label, actived, addr_value, show_value, class_cols);
            });
        }

        if(buttons != '') {
            button_type = buttons.type;
            button_icon = buttons.icon || '';
            button_data = buttons.data || {};
            html        += buttons.boxid;
            html        += '<button type="'+button_type+'" data-data="'+button_data+'" class="'+buttons.class+'">'+button_icon+' '+buttons.label+'</div>';
        }

    });


    html += '</div>';

    return html;

}

/**
 * SET VALUE WHEN CHANGE VALUE
 * inputset: fields id show value after get data
 * inputget: array: list field name/ field id
 * type: html for div, span,... or value for input
 * parse_en: use convertViToEnd if true
 */
function changeAndSetValue(inputset, inputget, type, parse_en) {
    var parse_en    = parse_en || true; //cho phép/không convert vi to en
    var type        = type || 'text';
    var values      = '', get_value;
    if(inputget.length > 0) {
        $.each(inputget, function(i, v) {
            get_value = $(v).val();
            values += parse_en == true ? convertViToEn(get_value) : get_value;
        });
    }
    addvalue(inputset, type, values);
}

/**
 * SET FUNCTION
 * Gọi tên biến để làm tên function
 */
function set_functions(func_name, baseurl, boxid) {
    if(func_name != '') {
        var functionName = window[func_name];
        if(typeof functionName !== 'undefined') {
            //Tải function từ button
            var boxid = boxid || $autofunc_boxid;
            window[func_name](id, baseurl, boxid); //Function name
        } else {
            if(app_debug()) {
                alert('Hàm được gọi không tồn tại, vui lòng kiểm tra lại: '+func_name);
            }
        }
    }
}

/**
 * CHECK FORM
 */
function do_action_check(formid) {

    var $error  = [];
    var $result = false;

    //Remove old error
    $(formid).find('.span-error').remove();
    $(formid).find('.'+$define_required).each(function()
    {
        if($.trim($(this).val()) == '') {
            $error.push('error');
            $(this).parent().append('<span class="span-error cl-red italic">Trường này không được bỏ trống</span>');
        }
    });

    if($error.length > 0) {
        $result = true;
    }

    return $result;

}

/**
 * CHECK EQUAL PASSWORD
 */
function do_equal_password(inputid, reinputid) {
    
    var $error  = [];
    var $result = false;

    var values      = $.trim($(inputid).val());
    var revalues    = $.trim($(reinputid).val());

    $(inputid).parent().find('.pw-error').remove();
    if(values != revalues) {
        $error.push('error');
        $(inputid).parent().append('<span class="pw-error cl-red italic">Mật khẩu không đúng</span>');
    } else {
        //RETURN TRUE
    }

    if($error.length > 0) {
        $result = true;
    }

    return $result;

}



/**
 * CHECK EMAIL
 */
function do_email(inputid) {

    var $error  = [];
    var $result = false;

    var email = $.trim($(inputid).val());
    
    var emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
    var checkEmail =  emailReg.test(email);

    $(inputid).parent().find('.email-error').remove();
    if(!checkEmail) {
        $error.push('error');
        $(inputid).parent().append('<span class="email-error cl-red italic">Email không đúng định dạng</span>');
    }

    if($error.length > 0) {
        $result = true;
    }

    return $result;

}

/**
 * SET FORM DATA
 * feilds is array
 * type: 
 * ** get: là lấy dữ liệu để so sánh: thêm, sửa,... 
 * ** form: lấy dữ liệu form để insert vào database
 * ** detail: Lấy dữ liệu theo kiểu data detial
 * get_class: class của div input để lấy dữ liệu
 * LẤY GIÁ TRỊ TỪ FIELDS TRUYỀN VÀO FORM_DATA
 */
function set_form_data(formid, feilds, type, get_class) {

    var get_class   = get_class || ['.form-data'];
    var type        = type || 'form';
    var $el         = $(formid);

    var $rows_div;

    var form_data   = [];
    var data_get    = []; //Lấy để làm điều kiền
    var data_data   = []; //Lấy dữ liệu để thêm vào database

    if(type == 'form') {

        if(get_class.length > 0) {

            $.each(get_class, function(i, v) {

                var $rows_div_get   = formid +' '+v+'-get'; //form-get, lấy điều kiện
                var $rows_div_data  = formid +' '+v+'-input'; //form-data, lấy dữ liệu

                //DATA GET
                $($rows_div_get).each(function(index, value) {

                    var feild_key   = $(this).attr('data-key')  || ''; //Lấy dữ liệu để so sánh, làm điều kiện khi thêm, sửa
                    var feild_type  = $(this).attr('data-type') || '';
                    var feild_name  = $(this).attr('data-name') || '';
                    var detail_type = $(this).attr('detail-type') || '';
                    var data_rows   = $(this).attr('data-rows') || '';

                    get_data = get_input_data(feild_type, $el, feild_name, '');

                    data_get.push({name:feild_key, value: get_data});

                });

                //DATA
                $($rows_div_data).each(function(index, value) {

                    var feild_key   = $(this).attr('data-key')  || ''; //Lấy dữ liệu để so sánh, làm điều kiện khi thêm, sửa
                    var feild_type  = $(this).attr('data-type') || '';
                    var feild_name  = $(this).attr('data-name') || '';
                    var detail_type = $(this).attr('detail-type') || '';
                    var data_rows   = $(this).attr('data-rows') || '';

                    get_data = get_input_data(feild_type, $el, feild_name, '');

                    data_data.push({name:feild_name, value: get_data});

                });

                form_data.push({get: data_get, data: data_data});

            });

        }

    }
    else if (type == 'multi-level') {
        
        // if(get_class.length > 0) {

        //     $.each(get_class, function(i, v) {

        //         var $rows_div_get   = formid +' '+v+'-parent'; //form-get, lấy điều kiện
        //         var $rows_div_data  = formid +' '+v+'-child'; //form-data, lấy dữ liệu

        //         //DATA GET
        //         $($rows_div_get).each(function(index, value) {

        //             var feild_key   = $(this).attr('data-key')  || ''; //Lấy dữ liệu để so sánh, làm điều kiện khi thêm, sửa
        //             var feild_type  = $(this).attr('data-type') || '';
        //             var feild_name  = $(this).attr('data-name') || '';
        //             var detail_type = $(this).attr('detail-type') || '';
        //             var data_rows   = $(this).attr('data-rows') || '';

        //             get_data = get_input_data(feild_type, $el, feild_name, '');

        //             data_get.push({name:feild_key, value: get_data});

        //         });

        //         //DATA
        //         $($rows_div_data).each(function(index, value) {

        //             var feild_key   = $(this).attr('data-key')  || ''; //Lấy dữ liệu để so sánh, làm điều kiện khi thêm, sửa
        //             var feild_type  = $(this).attr('data-type') || '';
        //             var feild_name  = $(this).attr('data-name') || '';
        //             var detail_type = $(this).attr('detail-type') || '';
        //             var data_rows   = $(this).attr('data-rows') || '';

        //             get_data = get_input_data(feild_type, $el, feild_name, '');

        //             data_data.push({name:feild_name, value: get_data});

        //         });

        //         form_data.push({get: data_get, data: data_data});

        //     });

        // }

    }
    else {

        var $feild_id       = feilds+' .rows-group';
        var detail_get      = [];
        var detail_get_data = [];
        var detail_data     = [];
        

        //Group data
        var groups_get      = [];
        var groups_data     = [];

        $($feild_id).each(function(key, items) {

            var rows_id         = $(this).attr('data-rows');

            if(get_class.length > 0) {

                $.each(get_class, function(k, item) {

                    var $rows_div_get   = '.listid'+rows_id+' '+item+'-get'; //form-get, lấy điều kiện
                    var $rows_div_data  = '.listid'+rows_id+' '+item+'-input'; //form-data, lấy dữ liệu
                    var $rows_div_group = '.listid'+rows_id+' '+'.rows-item'+rows_id+' .form-groups'; //form-groups, lấy dữ liệu
                    var count_rows_get  = $($rows_div_get).length; //Đếm con của từng rows get
                    var count_rows_data = $($rows_div_data).length; //Đếm con của từng rows data (detail)

                    //DATA GET
                    var objDataGet = {};
                    $($rows_div_get).each(function(i_get, v_get) {

                        var feild_key   = $(this).attr('data-key')  || ''; //Lấy dữ liệu để so sánh, làm điều kiện khi thêm, sửa
                        var feild_type  = $(this).attr('data-type') || '';
                        var feild_name  = $(this).attr('data-name') || '';
                        var detail_type = $(this).attr('detail-type') || '';
                        var data_rows   = $(this).attr('data-rows') || '';

                        var input_id    = feild_name+data_rows;

                        get_data        = get_input_data(feild_type, $el, '', input_id);

                        // detail_get.push({[feild_key]: get_data});
                        Object.assign(objDataGet, {[feild_key]: get_data});

                        if(i_get == count_rows_get - 1) {
                            var index = data_rows-1;
                            detail_get_data.push({[index]: objDataGet});
                            objDataGet =   {};
                        }

                    });

                    //GROUP
                    $($rows_div_group).each(function() {

                        var this_rows       = $(this).find('.form-groups-input');
                        var count_this_rows = this_rows.length;

                        $(this_rows).each(function(i_group, v_group) {

                            var feild_type  = $(this).attr('data-type') || '';
                            var feild_name  = $(this).attr('data-name') || '';
                            var detail_type = $(this).attr('detail-type') || '';
                            var data_rows   = $(this).attr('data-rows') || '';

                            var input_id    = feild_name+rows_id+data_rows;

                            get_data        = get_input_data(feild_type, $el, '', input_id);

                            groups_get.push({[feild_name]: get_data});

                            if(i_group == count_this_rows - 1) {
                                var index = data_rows-1;
                                groups_data.push(groups_get);
                                groups_get =   [];
                            }

                        });

                    });

                    //DATA
                    $($rows_div_data).each(function(i_data, v_data) {

                        var feild_key   = $(this).attr('data-key')  || ''; //Lấy dữ liệu để so sánh, làm điều kiện khi thêm, sửa
                        var feild_type  = $(this).attr('data-type') || '';
                        var feild_name  = $(this).attr('data-name') || '';
                        var detail_type = $(this).attr('detail-type') || '';
                        var data_rows   = $(this).attr('data-rows') || '';

                        var input_id    = feild_name+data_rows;

                        get_data        = get_input_data(feild_type, $el, '', input_id);

                        detail_data.push({name:feild_name, value: get_data});

                        if(i_data == count_rows_data - 1) {

                            var index = data_rows-1;

                            form_data.push({get:detail_get_data[index], data: detail_data, groups: groups_data});
                            detail_data = [];
                            groups_data = [];

                        }

                    });

                });

            }

        });

    }

    return form_data;

}

/** 
 * LẤY DỮ LIỆU THEO LOẠI
 * field_name: Input name
 * field_id: Input id
 * rows: Dùng khi chi tiết, có các dòng
 */
function get_input_data(type, formid, field_name, field_id, rows) {

    var field_name  = field_name || '';
    var field_id    = field_id || '';
    var rows        = rows || '';
    var type        = type || 'input';

    var input_get   = field_name != '' ? '[name="'+field_name+'"]' : field_id;
    
    switch(type) {
        case 'array':                   
            get_data    = pushdata($el, input_get);
            break;
        case 'file':
            get_data    = $(input_get).prop('files')[0];
            break;
        case 'textareaeditor':
            get_data    = getContent('editor'+field_name);
            break;
        case 'checkbox':
        case 'radio':
            if(field_name != '') {
                get_data    = formid.find('[name="'+field_name+'"]:checked').val();
            } else {
                get_data    = formid.find('[id="'+field_id+'"]:checked').val();
            }
            break;
        case 'select':
            if(field_name != '') {
                get_data    = formid.find('[name="'+field_name+'"]').val();
            } else {
                get_data    = formid.find('[id="'+field_id+'"]').val();
            }
            break;
        default:
            if(field_name != '') {
                get_data    = formid.find('[name="'+field_name+'"]').val();
            } else {
                get_data    = formid.find('[id="'+field_id+'"]').val();
            }
            break;
    }
    return get_data;
}


//ADD VALUE
function addvalue(boxid, type, value) {
 	var type = type || "html";
 	if(type == 'input' || type == 'text') {
 		$(boxid).attr('value', value);
 	} else {
 		$(boxid).html(value);
 	}
}

//Chuyển tiếng việt có dấu sang không dấu
function convertViToEn(str, space, strTo) {
	var space = space || ' ';
	var strTo = strTo || ''; // lower or upper
    str = str.toString().replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g,"a"); 
    str = str.toString().replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g,"e"); 
    str = str.toString().replace(/ì|í|ị|ỉ|ĩ/g,"i"); 
    str = str.toString().replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g,"o"); 
    str = str.toString().replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g,"u"); 
    str = str.toString().replace(/ỳ|ý|ỵ|ỷ|ỹ/g,"y"); 
    str = str.toString().replace(/đ/g,"d");
    str = str.toString().replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, "A");
    str = str.toString().replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, "E");
    str = str.toString().replace(/Ì|Í|Ị|Ỉ|Ĩ/g, "I");
    str = str.toString().replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, "O");
    str = str.toString().replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, "U");
    str = str.toString().replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, "Y");
    str = str.toString().replace(/Đ/g, "D");
    str = str.toString().replace(/" "/g, space);
    // // Some system encode vietnamese combining accent as individual utf-8 characters
    // // Một vài bộ encode coi các dấu mũ, dấu chữ như một kí tự riêng biệt nên thêm hai dòng này
    str = str.toString().replace(/\u0300|\u0301|\u0303|\u0309|\u0323/g, space); // ̀ ́ ̃ ̉ ̣  huyền, sắc, ngã, hỏi, nặng
    str = str.toString().replace(/\u02C6|\u0306|\u031B/g, space); // ˆ ̆ ̛  Â, Ê, Ă, Ơ, Ư
    // // Remove extra spaces
    // // Bỏ các khoảng trắng liền nhau
    str = str.toString().replace(/\s/g, space);
    str = str.toString().replace(/ + /g, space);
    str = str.toString().trim();
    // // Remove punctuations
    // // Bỏ dấu câu, kí tự đặc biệt
    str = str.toString().replace(/!|@|%|\^|\*|\(|\)|\+|\=|\<|\>|\?|\/|,|\.|\:|\;|\'|\"|\&|\#|\[|\]|~|\$|_|`|-|{|}|\||\\/g, space);
    switch (strTo) {
    	case 'lower':
    		str = str.toLowerCase();
    		break;
		case 'upper':
    		str = str.toUpperCase();
    		break;
		default:
    		str = str;
    		break;
    }
    return str;
}

/**
 * OPEN MODALBOX
 * button: is array button action to add (add, edit, remove,...)
 */
function showpopup(title, option, content, boxid, buttons, buttonboxid) {
	var option	= option || $defind_config_modalbox;
    var title   = title || 'Tiêu đề';
	var boxid	= boxid || $defind_config_modal_content; // show content
    var content = content || '';
	var button 	= button || []; //data button
    var buttonboxid = buttonboxid || ''; //show button content
	var button_type;
    var button_html = '';
	if(typeof buttons != 'undefined' && buttons.length > 0) {
		$.each(buttons, function(i, v) {
			button_type	= v.type || 'button'; //Type button
			button_html += '<button type="'+button_type+'" class="'+v.class+'">'+v.icon+' '+v.text+'</button>';
		});
	}
    hideMessage($defind_config_modal_error_box, $defind_config_time_alert); //Xóa alert (nếu có)
    if(typeof content !== 'undefined' && content != '') {
        $(boxid).html(content);
    }
    if(typeof button_html !== 'undefined' && button_html != '') {
        $(buttonboxid).html(button_html);
    }
    if(typeof title !== 'undefined' && title != '') {
        $($defind_config_modal_title).html(title);
    }
	$(option).modal('show');
}

/**
 *  SHOW POPUP ALERT
 */
function showPopupAlert(time, divid) {
    var time = time || $defind_config_time_alert;
    var divid = divid || 'open-modalbox';
    var boxid = '#'+divid;
    $(boxid).modal('show');
    $(boxid+' .modal-header').hide();
    $(boxid+' .modal-footer').hide();
    //Giá trị 0 để không tắt modal
    if(time > 0) {
        setTimeout(function() {
            $(boxid).modal('hide');
        }, time);
    }
}

//Get icon
function getIcon(status) {
    var param = {
        success: '<i class="fa fa-check"></i>',
        warning: '<i class="fa fa-times"></i>',
        empty: ''
    };
    return param[status];
}

/**
 *  HÀM TẢI LẠI TRANG
 */
function reload(type, time, url) {
    var url     = url || '';
    var time    = time || $defind_config_time_reload;
    if(type == 'success' || type == 'reload') {
        setTimeout(function() {
            if(url != "") {
                window.location.href = url;
            } else {
                location.reload();
            }
        }, time);
    } else {
        return false;
    }
}

/**
 * HÀM TRUYỀN VÀO CÁC GIÁ TRỊ ĐỂ TẠO RA 1 URL
 * vd: ['pages', 'add'] => url = pages/add
 */
function parse_url(data) {
    var baseurl = '', count=0;
    if(data.length > 0) {
        count = data.length;
        $.each(data, function(i, v) {
            if(i < count-1) {
                baseurl += v+'/';
            } else {
                baseurl += v;
            }
        });
    }
    return baseurl;
}

/**
 * HÀM TẢI ERROR
 * -- Tải thông báo lỗi nếu có
 */
function loadError(data, boxid) {

    var boxid = boxid || '.msg-error';

    if(typeof data !== 'undefined' && data.length > 0) {
        $(boxid).html('');
        $.each(data, function(i, v) {
            $(boxid).append('<div class="showerror"><li>'+v+'</li></div>');
        });
    }

}

/**
 * HÀM CHO PHÉP ENABLE/DISABLE
 */
function buttonAccess(divid, access) {
    var access = access || false;
    $(divid).prop('disabled', access);
}

// Hàm push data by name or id
function pushdata(formid, name, type) {
    var type = type || '';
    var data = [];
    formid.find('[name="'+name+'"]'+type).each(function()
    {
        data.push($(this).val());
    });
    return data;
}

/**
 * SỬ DỤNG DATETIME (TẠO RA NHỮNG INPUT DATETIME PICKER)
 */
function inputDateTime(boxid, format, minuteStep) {
    var boxid       = boxid || '.datepicker';
    var minuteStep  = minuteStep || 30;
    $(boxid).each(function() {
        var loadID      = $(this).attr('id');
        var format      = $(this).attr('format') || 'dd/mm/yyyy hh:ii';
        $('#'+loadID).datetimepicker({
            format: format,
            autoclose: true,
            todayBtn: true,
            minuteStep: minuteStep
        });
    });
}

/**
 * USE EDITOR
 */
function useEditor(boxid) {

    var boxid = boxid || '.editor';

    $(boxid).each(function() {

        var editorID    = $(this).attr('id');

        CKEDITOR.replace(editorID);

    });

}

/**
 *  GET CONTENT CKEDITOR
 */
function getContent(id) {
    var data = CKEDITOR.instances[id].getData();
    return data;
}

/**
 *  SET CONTENT CKEDITOR
 */
function setContent(id, content) {
    CKEDITOR.instances[id].setData(content);
}

/**
 * SELECTED OPTION BY VALUE
 */
function selectedByValue(selector, value) {
    //selector: name: [name="inputname"], id: #inputname
    $(selector).val(value).change();
}


/**
 * IMPORT ICHECK
 */
function importIcheck() {
    $('input[type="checkbox"].minimal-red, input[type="radio"].minimal-red').iCheck({
        checkboxClass: 'icheckbox_minimal-red',
        radioClass   : 'iradio_minimal-red'
    });
}

function checkedIcheck(inputID, type) {
    var type = type || 'check';
    $(inputID).iCheck(type);
}

/**
 * RESET FASTSELECT INPUT
 * inputID: NAME or ID of input
 * boxid: box show input again
 */
function resetFastSelect(inputID, boxid) {
    var selectbox = $(inputID);
    var fstexist = $(boxid).find(".fstElement").length;
    if (fstexist > 0) {
      $(boxid).find('.fstElement').remove();
      $(boxid).append(selectbox);
    }
    $('.multipleSelect').fastselect();
}

/**
 * CALL SORTABLE
 */
function useSortable(getClass) {

    $(document).find(getClass).each(function() {
        var boxid       = $(this).attr('id');
        var status      = $(this).attr('data-pull');
        new Sortable(document.getElementById(boxid), {
            group: {
                name: 'shared',
                pull: convertPullStatus(status) // To clone: set pull to 'clone'
            },
            animation: 150
        });
    });

}

//GET SORTABLE STATUS
function convertPullStatus(string) {
    var result;
    switch(string) {
        case 'true':
            result = true;
            break;
        case 'clone':
            result = 'clone';
            break;
        default:
            result = false;
            break;
    }
    return result;
}

/**
 * CONFIRM REMOVE
 */
function confirm_remove(message) {
    if (confirm(message) == true) {
      return true;
    } else {
      return false;
    }
}

$('.collapse-body-items').on('show.bs.collapse', function () {
	$(this).siblings('.box-collapse-heading').addClass('active');
});

$('.collapse-body-items').on('hide.bs.collapse', function () {
	$(this).siblings('.box-collapse-heading').removeClass('active');
});

/**
 * LOAD FIELD DEFAUT
 */
function autoload_fields(id, value) {
    var $row = '.rows-item'+id;
    $($row+'.field-display').fadeOut();
    $($row+'.'+value+'-show').fadeIn();
}


/**
 * SET AUTO ROWS
 * Đánh lại STT các rows
 * Ẩn các Feild Collapse, Hiện Feild Collapse cuối cùng
 * pages: Trang được load, VD: thay đổi từ trang content -> products thì phải cập nhật lại cho tất cả các feilds
 * field_type: Loại trường hiện tại được chọn, text, selectbox, checkbook,... from chooseFieldType
 */
function set_auto_row(type, pages, field_type) {

    var activeIndex, $rowsGroupId;
    var type    = type || 'add';
    var pages   = pages || '';
    var field_type = field_type || $defind_config_field_type_define;

    var $rows_group = $('body .rows-group');
    var $count_rows = $rows_group.length;

    $rows_group.each(function(i, v) {

        var index = i+1;
        var collapseBox = 'collapseBox'+index;

        $rowsGroupId    = $rows_group+index;

        if(i == $count_rows-1) {
            activeIndex = i+1;
        } else {
            activeIndex = 0;
        }

        $(this).addClass('rows-group'+index);
        $(this).attr('data-rows', index); //Đặt lại dòng hiện tại
        $(this).find('.rows-number').html(index);
        $(this).find('.rows-orders').html('<input type="number" class="form-control setRowsOrder" name="fdetail_order" data-input="fdetail_order'+index+'" value="'+index+'" />');
        $(this).find('[data-id]').attr('data-id', index);
        $(this).find('.field-label-rows').addClass('field-label-rows'+index);
        $(this).find('.field-name-rows').addClass('field-name-rows'+index);
        $(this).find('.field-type-rows').addClass('field-type-rows'+index);
        $(this).find('[data-toggle="collapse"]').attr('href', '#'+collapseBox);
        $(this).find('[aria-controls]').attr('aria-controls', collapseBox);
        $(this).find('.collapse-body-items').attr('id', collapseBox);
        $(this).find('.box-collapse-body').addClass('listid'+index);
        $(this).find('.rows-list-item').addClass('rows-item'+index);
        $(this).find('.numrows-to-value').val(index);

        //Set data-input to rows-frontends
        var useFrontendDataInput    = $(this).find('.rows-frontends input').attr('name');
        useFrontendDataInput        = useFrontendDataInput+index;
        $(this).find('.rows-frontends input').attr('data-input', useFrontendDataInput);
        $(this).find('.rows-frontends .form-detail-input').attr('data-rows', index);

        if(pages != '') {
            $(this).find('[name="pages"]').attr('value', pages);
        }

        //Get field_type
        var getFieldType    = $(this).find('.chooseFieldType').val();
        autoload_fields(index, getFieldType);

        set_rows_id('#'+collapseBox, $defind_config_form_data_get, index);

    });

    //Nếu là xóa feild box thì không cần hiện thị collapse cuối cùng
    if(type != 'remove') {
        auto_collapse(activeIndex);
    }

}

/**
 * SET AUTO ROWS - GROUP
 * Đánh lại STT
 * Thay đổi các giá trị data-rows
 */
function set_rows_group(id, divGroup) {

    var listBox = '.listid'+id;

    var divGroup =  listBox+' .rows-item'+id+' .form-groups'; //form-groups, lấy dữ liệu            

    //GROUP
    $(divGroup).each(function(i_group, v_group) {
        var rows        = i_group + 1; // rows > index
        //set rowsbox
        $(this).addClass('rowsbox'+rows);
        $(this).find('.removegroups').attr('data-id', rows);
        //Change data rows input
        $(this).find('.form-groups-input').attr('data-rows', rows);
        $('.form-groups-input', this).each(function() {
            var input_name  = $(this).attr('data-name');
            $(this).find('.form-input-input').attr('id', input_name+id+rows);

        });
    });

}

/**
 * SET ROWS ID
 */
function set_rows_id(boxid, form_class, index) {
    var input_name, input_id;
    var form_class = form_class || ['.form-data'];
    if(form_class.length > 0) {
        $.each(form_class, function(ind, val) {

            var form_get    = boxid+' '+val+'-get';
            var form_input  = boxid+' '+val+'-input';
            var form_groups = boxid+' '+'form-groups-input';

            $(form_get).each(function(i, v) {
                input_name  = $(this).attr('data-name');
                input_id    = input_name+index;
                $(this).attr('data-rows', index);
                $(this).find('.form-input-input').attr('id', input_id);
            });

            $(form_input).each(function(i, v) {
                input_name  = $(this).attr('data-name');
                input_id    = input_name+index;
                $(this).attr('data-rows', index);
                $(this).find('.form-input-input').attr('id', input_id);
            });

            $(boxid+' .form-groups').each(function(rows, data) {

                var rows_index  = (rows);

                $(form_groups).each(function(i, v) {
                    input_name  = $(this).attr('data-name');
                    input_id    = input_name+index;
                    $(this).attr('data-rows', rows_index);
                    $(this).find('.form-input-input').attr('id', input_id);
                });
            });
            
        });
    }
    
}

/**
 * HIỂN THỊ NỘI DUNG COLLAPSE CUỐI CÙNG KHI THÊM
 */
function auto_collapse(rowsid) {
    $('body .collapse-body-items').removeClass('in');
    if(rowsid != '') {
        $('body #collapseBox'+rowsid).addClass('in');
    }
}


/**
 * Add fields when click button add fields
 */
function add_fields_html(boxid, pages, type, useFrontend) {
    var pages 	= pages || '';
    var type 	= type || '';
    var useFrontend    = useFrontend || 0;
    var checked_use_frontend   = ''
    /**
     * Kiểm tra xem có cho phép hiển thị ngoài frontend hay không
     * Tính năng này áp dụng dùng để thiết kế giao diện để hiển thị bên ngoài
     * VD: Trang liên hệ, Trang đơn hàng (của sản phẩm)
     */

    if(useFrontend == 1) {
        checked_use_frontend   = 'checked';
    }
    var html = '<tr class="rows-group" data-rows="">'
                +'<td>'
                    +'<div class="align-center"><span class="rows-number"></span></div>'
                +'</td>'
                +'<td colspan="3">'
                    +'<div class="box-collapse-group" id="accordion" role="tablist" aria-multiselectable="true">'
                        +'<div class="box-collapse">'
                            +'<div class="box-collapse-heading active" role="tab" id="headingOne">'
                                +'<h5 class="box-collapse-title">'
                                    +'<a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseBox" aria-expanded="true" aria-controls="collapseBox">'
                                        +'<div class="row">'
                                            +'<div class="col-md-4"><span class="field-label-rows">Field label</span></div>'
                                            +'<div class="col-md-4"><span class="field-name-rows">Field name</span></div>'
                                            +'<div class="col-md-3"><span class="field-type-rows">Field type</span></div>'
                                        +'</div>'
                                    +'</a>'
                                +'</h5>'
                            +'</div>'
                            +'<div id="collapseBox" class="collapse-body-items collapse in" role="tabpanel" aria-labelledby="headingOne">'
                                +'<div class="box-collapse-body collapse-body list-items">'
                                    +'<div class="row">'
                                        +'<div class="col-md-12">'
                                            +'<div class="form-detail-get" data-type="text" data-name="id" data-rows="" data-key="id">'
                                                +'<input type="hidden" name="id" id="" class="form-control form-input-input" value="" readonly />'
                                            +'</div>'
                                            +'<div class="form-detail-input" data-type="text" data-name="themes" data-rows="">'
                                                +'<input type="hidden" name="themes" id="" class="form-control form-input-input" value="'+app_themes+'" readonly />'
                                            +'</div>'
                                            +'<div class="form-detail-input" data-type="text" data-name="pages" data-rows="">'
                                                +'<input type="hidden" name="pages" id="" class="form-control form-input-input" value="'+pages+'" readonly />'
                                            +'</div>'
                                            +'<div class="form-detail-input" data-type="input" data-name="fdetail_order" data-rows="">'
                                                +'<input type="hidden" class="form-control form-input-input input-required numrows-to-value" name="fdetail_order" value="" />'
                                            +'</div>'
                                            +'<div class="form-detail-input" data-type="input" data-name="fdetail_frontend" data-rows="">'
                                                +'<input type="hidden" class="form-control form-input-input input-required" name="fdetail_frontend" value="'+useFrontend+'" />'
                                            +'</div>'
                                            +'<div class="form-select">'
                                                +'<label>Chọn loại Input</label>'
                                                +'<div class="form-detail-input form-group" data-type="select" data-name="fdetail_type" data-rows="">'
                                                    +'<select class="form-control chooseFieldType form-input-input" name="fdetail_type[]" id="fdetail_type">'
                                                        +'<optgroup label="Loại cơ bản">'
                                                            +'<option data-id="" value="text">-- Text field</option>'
                                                            +'<option data-id="" value="textarea">-- Textarea</option>'
                                                            +'<option data-id="" value="checkbox">-- Checkbox</option>'
                                                            +'<option data-id="" value="select">-- Selectbox</option>'
                                                            +'<option data-id="" value="Radio">-- Radio box</option>'
                                                            //+'<option data-id="" value="image">-- Tải ảnh từ máy tính</option>'
                                                            +'<option data-id="" value="date">-- Ngày</option>'
                                                            +'<option data-id="" value="datetime">-- Ngày - Giờ</option>'
                                                            +'<option data-id="" value="hidden">-- Trường Ẩn - Hidden</option>'
                                                        +'</optgroup>'
                                                        +'<optgroup label="Loại nâng cao">'
                                                            +'<option data-id="" value="chooseimage">-- Chọn hình từ server</option>'
                                                            +'<option data-id="" value="multipleselect">-- Multiple Select</option>'
                                                            +'<option data-id="" value="group">-- Group box</option>'
                                                        +'</optgroup>'
                                                    +'</select>'
                                                +'</div>'
                                            +'</div>'
                                            +'<div class="form-select">'
                                                +'<label>Chọn vị trí hiển thị</label>'
                                                +'<div class="form-detail-input form-group" data-type="select" data-name="fdetail_column" data-rows="">'
                                                    +'<select class="form-control chooseFieldColumn form-input-input" name="fdetail_column[]" id="fdetail_column">'
                                                        +'<option data-id="" value="left">-- Cột TRÁI</option>'
                                                        +'<option data-id="" value="right">-- Cột PHẢI</option>'
                                                    +'</select>'
                                                +'</div>'
                                            +'</div>'
                                        +'</div>'
                                    +'</div>'
                                    +'<div class="row rows-list-item field-display date-show datetime-show text-show textarea-show select-show checkbox-show Radio-show text-show image-show group-show multipleselect-show hidden-show">'
                                        +'<div class="col-md-4">'
                                            +'<div class="form-group">'
                                                +'<label>Field Label</label>'
                                                +'<div><small>Tiêu đề của trường được tạo</small></div>'
                                            +'</div>'
                                        +'</div>'
                                        +'<div class="col-md-8">'
                                            +'<div class="form-group">'
                                                +'<label>Label</label>'
                                                +'<div class="form-detail-input" data-type="input" data-name="fdetail_label" data-rows="">'
                                                    +'<input type="text" name="fdetail_label[]" id="" class="form-control form-input-input fields-label input-required" data-id="" placeholder="Field label">'
                                                +'</div>'
                                            +'</div>'
                                        +'</div>'
                                    +'</div>'
                                    +'<div class="row rows-list-item field-display date-show datetime-show text-show textarea-show select-show checkbox-show Radio-show text-show image-show group-show multipleselect-show hidden-show">'
                                        +'<div class="col-md-4">'
                                            +'<div class="form-group">'
                                                +'<label>Field Name</label>'
                                                +'<div><small>Tên Input - lấy dữ liệu</small></div>'
                                            +'</div>'
                                        +'</div>'
                                        +'<div class="col-md-8">'
                                            +'<div class="form-group">'
                                                +'<label>Name</label>'
                                                +'<div class="form-detail-input" data-type="input" data-name="fdetail_name" data-rows="">'
                                                    +'<input type="text" name="fdetail_name[]" id="" class="form-control form-input-input input-required" placeholder="Field name">'
                                                +'</div>'
                                            +'</div>'
                                        +'</div>'
                                    +'</div>'
                                    +'<div class="row rows-list-item field-display text-show textarea-show select-show checkbox-show Radio-show text-show image-show multipleselect-show">'
                                        +'<div class="col-md-4">'
                                            +'<div class="form-group">'
                                                +'<label>Field placeholder</label>'
                                                +'<div><small>Mô tả Input</small></div>'
                                            +'</div>'
                                        +'</div>'
                                        +'<div class="col-md-8">'
                                            +'<div class="form-group">'
                                                +'<label>Placeholder</label>'
                                                +'<div class="form-detail-input" data-type="input" data-name="fdetail_placeholder" data-rows="">'
                                                    +'<input type="text" name="fdetail_placeholder[]" id="" class="form-control form-input-input" placeholder="Placeholder">'
                                                +'</div>'
                                            +'</div>'
                                        +'</div>'
                                    +'</div>'
                                    +'<div class="row rows-list-item field-display date-show datetime-show text-show textarea-show select-show checkbox-show Radio-show text-show image-show multipleselect-show">'
                                        +'<div class="col-md-4">'
                                            +'<div class="form-group">'
                                                +'<label>Field Required</label>'
                                                +'<div><small>Cho phép rỗng hay không?</small></div>'
                                            +'</div>'
                                        +'</div>'
                                        +'<div class="col-md-8">'
                                            +'<div class="form-group">'
                                                +'<label>Required</label>'
                                                +'<div class="form-detail-input" data-type="select" data-name="fdetail_required" data-rows="">'
                                                    +'<select class="form-control form-input-input" name="fdetail_required[]" id="">'
                                                        +'<option value="required">Không cho phép rỗng</option>'
                                                        +'<option value="">Cho phép rỗng</option>'
                                                    +'</select>'
                                                +'</div>'
                                            +'</div>'
                                        +'</div>'
                                    +'</div>'
                                    +'<div class="row rows-list-item field-display textarea-show">'
                                        +'<div class="col-md-4">'
                                            +'<div class="form-group">'
                                                +'<label>Field Editor</label>'
                                                +'<div><small>Textarea tích hợp trình soạn thảo văn bản?</small></div>'
                                            +'</div>'
                                        +'</div>'
                                        +'<div class="col-md-8">'
                                            +'<div class="form-group">'
                                                +'<label>Required</label>'
                                                +'<div class="form-detail-input" data-type="select" data-name="fdetail_editor" data-rows="">'
                                                    +'<select class="form-control form-input-input" name="fdetail_editor[]" id="">'
                                                        +'<option value="">[KHÔNG] tích hợp soạn thảo văn vản (EDITOR)</option>'
                                                        +'<option value="editor">[CÓ] Tích hợp soạn thảo văn vản (EDITOR)</option>'
                                                    +'</select>'
                                                +'</div>'
                                            +'</div>'
                                        +'</div>'
                                    +'</div>'
                                    +'<div class="row rows-list-item field-display text-show textarea-show select-show checkbox-show Radio-show text-show image-show">'
                                        +'<div class="col-md-4">'
                                            +'<div class="form-group">'
                                                +'<label>Description</label>'
                                                +'<div><small>Mô tả cho trường</small></div>'
                                            +'</div>'
                                        +'</div>'
                                        +'<div class="col-md-8">'
                                            +'<div class="form-group">'
                                                +'<label>Description</label>'
                                                +'<div class="form-detail-input" data-type="textarea" data-name="fdetail_description" data-rows="">'
                                                    +'<textarea class="form-control form-input-input" name="fdetail_description[]" id="" rows="3"></textarea>'
                                                +'</div>'
                                            +'</div>'
                                        +'</div>'
                                    +'</div>'
                                    +'<div class="row rows-list-item field-display group-show select-show checkbox-show">'
                                        +'<div class="col-md-12">'
                                            +'<div class="field-group-contents form-group"></div>'
                                            +'<div class="form-group">'
                                                +'<div class="align-left">'
                                                    +'<button type="button" data-id="" class="btn btn-success btn-sm btnaddfildsgroup"><i class="fa fa-plus-square"></i> New Group</button>'
                                                +'</div>'
                                            +'</div>'
                                        +'</div>'
                                    +'</div>'
                                    +'<div class="row rows-list-item field-display multipleselect-show">'
                                        +'<div class="col-md-4">'
                                            +'<div class="form-group">'
                                                +'<label>Field Multiple Select</label>'
                                                +'<div><small>Lựa chọn nhiều dòng / chọn nhanh</small></div>'
                                            +'</div>'
                                        +'</div>'
                                        +'<div class="col-md-8">'
                                            +'<div class="form-group">'
                                                +'<label>Multiple Select Module</label>'
                                                +'<div class="form-detail-input" data-type="input" data-name="fdetail_modules" data-rows="">'
                                                    +'<input type="text" name="fdetail_modules[]" id="" class="form-control form-input-input" placeholder="Multiple Select Module">'
                                                +'</div>'
                                            +'</div>'
                                        +'</div>'
                                    +'</div>'
                                    +'<div class="row rows-list-item field-display multipleselect-show">'
                                        +'<div class="col-md-4">'
                                            +'<div class="form-group">'
                                                +'<label>Field Multiple Yes/No</label>'
                                                +'<div><small>Cho phép chọn nhiều hay không?</small></div>'
                                            +'</div>'
                                        +'</div>'
                                        +'<div class="col-md-8">'
                                            +'<div class="form-group">'
                                                +'<label>Multiple Yes/No</label>'
                                                +'<div class="form-detail-input" data-type="select" data-name="fdetail_multiple" data-rows="">'
                                                    +'<select class="form-control form-input-input" name="fdetail_multiple[]" id="">'
                                                        +'<option value="">Không cho phép</option>'
                                                        +'<option value="multiple">Cho phép</option>'
                                                    +'</select>'
                                                +'</div>'
                                            +'</div>'
                                        +'</div>'
                                    +'</div>'
                                    +'<div class="form-group">'
                                        +'<div class="align-right">'
                                            +'<button type="button" data-id="" data-type="hide" class="btn btn-danger btn-sm btnremovefield"><i class="fa fa-trash-o"></i> Remove Field</button>'
                                        +'</div>'
                                    +'</div>'
                                +'</div>'
                            +'</div>'
                        +'</div>'
                    +'</div>'
                +'</td>'
                +'<td>'
                    +'<div class="align-center"><span class="rows-orders"></span></div>'
                +'</td>'
                +'<td>'
                    +'<div class="align-center"><span class="rows-frontends"><input type="checkbox" class="setRowUseFrontend" name="fdetail_frontend" data-input="fdetail_frontend" '+checked_use_frontend+' value="1" /></span></div>'
                +'</td>'
            +'</tr>';
    $(boxid).append(html);
    //Đánh lại số thứ tự các rows
    set_auto_row();
}

/**
 * TẢI DỮ LIỆU VÀO INPUT
 * index: Tải vào dòng dữ liệu nào?
 */
function load_field_data(index, data) {
	$.each(data, function(i, v) {
		var boxid = '#'+i+index;
		switch (v) {
            case 'select':
                $(boxid).find('option[value="'+v+'"]').prop('selected', true);
				break;
            default:
				$(boxid).val(v);
				break;
		}
	});
}


/**
 * TẢI DỮ LIỆU GROUP TỪ DATABASE VÀO INPUT
 */
function load_field_groups_data(id, rows, data) {

    $.each(data, function(i, v) {

        var boxid = '#'+i+id+rows;
        $(boxid).attr('value', v);
        

    });

}


/**
 * ADD FIELD GROUP
 */
function add_fields_group(id, boxid) {
    var $row        = '.rows-item'+id;
    var pages       = $('#pages').val(); //Lấy trang để load field cho đúng
    var field_type  = $('#fdetail_type'+id).val(); //Lấy loại để hiển thị lại ds field
    var html = '<div class="row form-group form-groups">'
                    +'<div class="col-md-3">'
                        +'<div class="form-groups-input" data-type="input" data-name="fieldgroup_item">'
                            +'<input type="text" name="fieldgroup_item[]" id="fieldgroup_item'+id+'" class="form-control form-input-input" placeholder="Item">'
                        +'</div>'
                    +'</div>'
                    +'<div class="col-md-3">'
                        +'<div class="form-groups-input" data-type="input" data-name="fieldgroup_value">'
                            +'<input type="text" name="fieldgroup_value[]" id="fieldgroup_value'+id+'" class="form-control form-input-input" placeholder="Value">'
                        +'</div>'
                    +'</div>'
                    +'<div class="col-md-3">'
                        +'<div class="form-groups-input" data-type="select" data-name="fieldgroup_type">'
                            +'<select class="form-control form-input-input" name="fieldgroup_type[]" id="fieldgroup_type'+id+'">'
                                +'<option value="">Không chọn</option>'
                                +'<option value="selected">Lựa chọn (selected)</option>'
                            +'</select>'
                        +'</div>'
                    +'</div>'
                    +'<div class="col-md-2">'
                        +'<div class="form-groups-input" data-type="select" data-name="fieldgroup_select">'
                            +'<select class="form-control form-input-input" name="fieldgroup_select[]" id="fieldgroup_select'+id+'">'
                                +'<option value="select">Selectbox</option>'
                                +'<option value="checkbox">Checkbox</option>'
                                +'<option value="radio">Radio Box</option>'
                            +'</select>'
                        +'</div>'
                    +'</div>'
                    +'<div class="col-md-1">'
                        +'<button type="button" class="btn btn-danger btn-sm removegroups"><i class="fa fa-times"></i></button>'
                    +'</div>'
                    +'<div class="clr"></div>'
                +'</div>';
    $($row+' '+boxid).append(html);
    //Đánh lại số thứ tự các rows
    set_rows_group(id);
}

/**
 * Remove fields when click button remove fields
 * But, if field in database use remove_fields_data function
 */
function remove_fields_html(type, boxid) {
    switch (type) {
        case 'hide':
            $(boxid).remove();
            break;
        case 'remove':
            //remove from database
            break;
    }
}

/**
 * Remove fields groups when click button remove fields
 * But, if field in database use remove_fields_group_data function
 */
function remove_fields_group_html(id, type, boxid) {
    switch (type) {
        case 'hide':
            $(boxid).remove();
            set_rows_group(id);
            break;
        case 'remove':
            //remove from database
            break;
    }
}

/**
 * ADD HEADER FIELD
 */
function set_header_fields(id, field_label, field_name, field_type) {

    var field_name  = field_name;
    if(field_name == '') {
        field_name  = convertViToEn(field_label, '_', 'lower');
    }

    addvalue('.field-label-rows'+id, 'html', field_label);
    addvalue('.field-name-rows'+id, 'html', field_name);
    addvalue('.field-type-rows'+id, 'html', field_type);

}

/**
 * Change fields when choose type fields: text, group, selection,...
 */
function change_fields_selected() {

}

/**
 * Show/Hide box fields when change type
 */
function show_hide_fields_selected() {

}

/**
 * Add/update fields into database
 */
function update_fields_data(formid, type, baseurl, boxid, boxmodal, showtype) {

}

/**
 * Remove Fields in database
 */
function remove_fields_data(id, type, baseurl, boxid, boxmodal, showtype) {

}

var layoutTotalColumn = 12;

$(function() {

    $(document).on('change', '[name="layoutColumn"]', function() {
		var rowsItem = Math.round($(this).val()); //Làm tròn
		var layoutKey	= $(this).attr('data-type');
		var layoutRows	= $(this).attr('data-rows');
		var boxid = '.layout-rows'+layoutKey+layoutRows;
		addRowsLayout(rowsItem, boxid);
	});

	$('.addLineLayout').on('click', function() {

		count++;

		var layoutKey = $(this).attr('data-key'); //header, body, footer

		var boxLayout = '.layout-'+layoutKey;

		addLayout(boxLayout, count, layoutKey);		

	});

	$(document).on('click', '.removeLineLayout', function() {

		var boxid 	= $(this).attr('data-rel');
		boxid 		= '.rows'+boxid;

		$(boxid).remove();

	});

	$(document).on('keyup', '.layout-column-value', function() {
		var values    = $(this).val();
		$(this).parent().parent().attr('class', values);
	});

    //Thực hiện cập nhật
    $('.btnSaveLayoutAction').on('click', function() {

        var $el = 'form#frmFormUpdate';
        var baseurl = parse_url(['layouts', 'create']);

        updateLayout($el, baseurl, '.modal', 'popup');

    });

    /**
     * TẢI LAYOUT ĐỂ CHỈNH SỬA
     */
    if(app_module == 'layouts' && app_action == 'update' && app_loadid != '') {

        var baseurl = parse_url(['admin', 'layouts', 'load-data-update']);

        loadData([{id: app_loadid, themes: app_themes, pages: app_module}], baseurl, '.layout-body', 'alert', 'layoutdataupdate');

    }

});

//CẬP NHẬT MODULE CONFIG
function updateLayout(formid, baseurl, divid, showpopup) {
    var showpopup       = showpopup || 'popup';
    var type            = type || app_action;
    var boxid           = divid+'-alert';
    var boxerror        = divid+'-message';
    var layout_name     = $(formid).find('[name="layoutName"]').val();
    var layout_type     = $(formid).find('[name="sltChoosePages"]').val();
    var layout_header   = layoutGetData(formid+' .form-header');
    var layout_body     = layoutGetData(formid+' .form-body');
    var layout_footer   = layoutGetData(formid+' .form-footer');
    //Append data
    var form_data       = new FormData();
    var data            = set_form_data(formid, formid+' .form-data', 'form', ['.form-data']);
    form_data.append('data', JSON.stringify(data));
    form_data.append('layout_header',JSON.stringify(layout_header));
    form_data.append('layout_body',JSON.stringify(layout_body));
    form_data.append('layout_footer',JSON.stringify(layout_footer));
    //Xử lý file
    var url = parse_url([app_url, app_page, baseurl]);
    if(!do_action_check(formid)) {
        $.ajaxSetup({
            headers: {
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            }
        });
        $.ajax({
            url: url,
            type: 'POST',
            data: form_data,
            contentType: false,
            cache: false,
            processData: false,
            beforeSend:function(){
                $(boxid).html('<div class="info"><i class="fa fa-spinner fa-pulse fa-1x fa-fw"></i> Đang xử lý. Chờ xíu...</div>');
                if(showpopup == 'popup') {
                    showPopupAlert(5000);
                }
                hideMessage($defind_config_modal_error_box, $defind_config_time_alert);
                scrollTop($defind_config_modalbox);
            },
            success: function(response){
                data = response;
                $(boxid).fadeIn('slow').html('<div class="'+data.status+'">'+getIcon(data.status)+' '+data.alert+'</div>');
                if(typeof data.message !== 'undefined' && data.message.length > 0) {
                    loadError(data.message, boxerror);
                }
                if(app_debug() == false) {
                    reload(data.status);
                }
            }
        });
    }

}

function layoutGetData(formid, inputName) {

    var data = [];
    var details;

    //formid > .layout-items
    $(formid).find('.layout-items').each(function(index, value) {

        var dataType = $(this).attr('data-type'); //header/body/footer
        var dataRows = $(this).attr('data-rows'); //1,2,3
        var block_id = $(this).attr('data-block-id');

        totalColumn     = $(this).find('#layoutColumn'+dataType+dataRows).val(); //tổng cộng cột / 1 dòng của giao diện

        details = [];

        $(this).find('[name="layoutData[]"]').each(function(i_detail, v_detail) {

            details.push({
                id: $(this).attr('data-id'),
                value: $(this).val()
            });

        });

        data.push({
            column: totalColumn,
            block_id: block_id,
            values: details
        });

    });

    return data;

}

$(function() {

	if((app_module == 'layoutconfigs' || app_module == 'layoutconfigsheaderfooter') && app_action  == 'create') {

		//Tải layout header || footer tự động
		if(app_loadid == 'header' || app_loadid == 'footer') {
			baseurl     = parse_url([app_page, 'layouts', 'json?st='+app_loadid]);
			loadData([{id: 4, themes: app_themes, pages: app_module}], baseurl, '.layout-body', 'alert', 'layoutconfigs');
		}
		//Tải ds widget khi load trang
		layoutConfigLoadData('widget', 'widget/json', '.layout_modules_list');

		//Tải layout body khi chọn module cần hiển thị
		$('.multipleSelect').fastselect({
		    onItemSelect: function($item, itemModel) {
		        layoutID 	= itemModel.value;
		        pages 		= itemModel.pages;
		        $('[name="pages"]').val(pages); //Set pages value when choose pages, using load column
		        baseurl     = parse_url([app_page, 'layouts', 'json']);
		        loadData([{id: layoutID, themes: app_themes, pages: app_module}], baseurl, '.layout-body', 'alert', 'layoutconfigs');
		    }
		});

	}

	//TẢI DS WIDGET
    $('.loadlayoutdata').on('click', function() {
        var pages = $('[name="choosePage"]').val();
        var type = $(this).attr('data-rel');
        layoutConfigLoadData(type, 'widget/json', '.layout_modules_list', pages);
    });

    $(document).on('click', '.layourconfig-remove-group-items', function() {
    	var id = $(this).attr('data-id');
    	// $('.layout-container').find('.group-item'+id).remove();
    	$(this).parent().remove(); //Chỉ xóa cái hiện tại ko ảnh hưởng đến các block khác
    });

    $('.btnSaveLayoutConfigAction').on('click', function() {

    	var $el 	= $('form#frmFormUpdate');
    	
    	//update layout
    	updateLayoutConfig($el, 'layoutconfigs/update', '.modal');

    })

});


/**
 * GET FORM DATA
 */
function layoutConfigFormData() {

	var data = [];

	$('.layout-data .layout-rows-group').each(function() {

		$(this).find('.layout-item-demo').each(function() {

			var detail_id = $(this).attr('detail-id');

			var rowsData 	= [];

			$(this).find('.list-group-item').each(function(index, value) {

				var layout_config_widget_id = $(this).attr('data-id');
				var layout_config_type		= $(this).attr('data-type');

				//position_show: thứ tự hiển thị trên website trong 1 block

				data.push({detail_id: detail_id, widget_id: layout_config_widget_id, type: layout_config_type, position_show: index});

			});			

		}); 

	});

	return data;

}


/**
 * THỰC HIỆN CẬP NHẬT LAYOUT CONFIG
 */
function updateLayoutConfig(formid, baseurl, divid, showpopup) {

	var showpopup       = showpopup || 'popup';
    var type            = type || app_action;
    var boxid           = divid+'-alert';
    var boxerror        = divid+'-message';

    //parse_data
    var layout_config 	= layoutConfigFormData();
    var layout_page		= formid.find('[name="pages"]').val();
    var layout_module	= formid.find('[name="choosePage"]').val();

    if(layout_page != '') {

    	//Append data
	    var form_data       = new FormData();
	    form_data.append('layout_config', JSON.stringify(layout_config));
	    form_data.append('layout_page', layout_page);
	    form_data.append('layout_module', layout_module);

	    //Xử lý file
	    var url = parse_url([app_url, app_page, baseurl]);
	    if(!do_action_check(formid)) {
	        $.ajaxSetup({
	            headers: {
	                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
	            }
	        });
	        $.ajax({
	            url: url,
	            type: 'POST',
	            data: form_data,
	            contentType: false,
	            cache: false,
	            processData: false,
	            beforeSend:function(){
	                $(boxid).html('<div class="info"><i class="fa fa-spinner fa-pulse fa-1x fa-fw"></i> Đang xử lý. Chờ xíu...</div>');
	                if(showpopup == 'popup') {
	                    showPopupAlert(5000);
	                }
	                hideMessage($defind_config_modal_error_box, $defind_config_time_alert);
	                scrollTop($defind_config_modalbox);
	            },
	            success: function(response){
	                data = response;
	                $(boxid).fadeIn('slow').html('<div class="'+data.status+'">'+getIcon(data.status)+' '+data.alert+'</div>');
	                if(typeof data.message !== 'undefined' && data.message.length > 0) {
	                    loadError(data.message, boxerror);
	                }
	                if(app_debug() == false) {
	                    reload(data.status);
	                }
	            }
	        });

	    }

	}

}


/**
 * TẢI DANH SÁCH WIDGET
 */
function layoutConfigLoadData(type, baseurl, boxid, pages) {
	var pages 		= pages || '';
    var url         = parse_url([app_url, app_page,  baseurl]);
    var form_data   = new FormData();
    form_data.append('type', type);
    form_data.append('pages', pages);
    $.ajaxSetup({
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    });
    $.ajax({
        url: url,
        type: 'POST',
        data: form_data,
        contentType: false,
        cache: false,
        processData: false,
        beforeSend:function(){
            $(boxid).html('<div class="info"><i class="fa fa-spinner fa-pulse fa-1x fa-fw"></i> Đang xử lý. Chờ xíu...</div>');
        },
        success: function(response){
            data = response;
            $(boxid).fadeIn('slow').html('<div class="'+data.status+'">'+getIcon(data.status)+' '+data.alert+'</div>');
            loadError(data.message);
            if(data.status == 'success') {
                switch(type) {
                    case 'widget':
                    	//type: widget, column, config (type_widget để lấy dữ liệu là widget, hoặc là column, hoặc là thông tin config)
                        loadWidgetList(data.data, boxid, type);
                        break;
                    default:
                    	loadWidgetList(data.data, boxid, type);
                        break;
                }
            }
        }, error:function(){
            if(app_debug() == false) {
                layoutConfigLoadData(type, baseurl, boxid, pages)
            }
        }
	});
}

function loadWidgetList(data, boxid, type) {

	var type 	= type || 'widget';

	var html 	= '<div class="warning">Không tồn tại dữ liệu</div>';

	if(data.length > 0) {

		html = '';

		$.each(data, function(i, v) {

			html += '<div class="list-group-item group-item'+v.id+'" data-type="'+type+'" data-id="'+v.id+'">'
						+v.title
						+'<span class="cl-red pull-right layourconfig-remove-group-items layout-remove-buttons" data-id="'+v.id+'">X</span>'
					+'</div>';

		});

	}

	$(boxid).html(html);

}

//Create form
function createForm(data, boxid) {
	

}

/////////////////////////////////////////////////////////////////////////////////////////////////////
//-------------------------------- LAYOUT | Để sử dụng chung cho các modules khác ---------------////
//-----------------------------------------------------------------------------------------------////
/**
 * ADD LAYOUT
 * Use: Khi click vào tạo layout hoặc load layout để chỉnh sửa
 */
function addLayout(boxid, rows, type, cols) {

	var cols = cols || 'col-md-12';

	var html = '';

	html = '<div class="layout-items rowsitem'+type+rows+'" data-block-id="" data-type="'+type+'" data-rows="'+rows+'">'
                    +'<div class="layout-column">'
                    	+'<div class="form-detail-data" data-type="input" data-name="layoutColumn" data-rows="'+type+rows+'">'
                        	+'<input type="number" class="form-control" name="layoutColumn" id="layoutColumn'+type+rows+'" data-type="'+type+'" data-rows="'+rows+'" value="1" />'
                        +'</div>'
                        +'<button type="button" class="btn btn-danger full-width btn-sml removeLineLayout" data-rel="item'+type+rows+'"><i class="fa fa-trash" aria-hidden="true"></i> Xóa</button>'
                    +'</div>'
                    +'<div class="layout-content layout-rows'+type+rows+'">'
                        +'<div class="'+cols+'">'
                            +'<div class="layout-item-demo">'
                                +'<input type="text" class="form-control layout-column-value" name="layoutData[]" data-id="" id="layoutData'+type+rows+'" data-type="'+type+'" data-rows="'+rows+'" value="'+cols+'" />'
                            +'</div>'
                        +'</div>'
                    +'</div>'
                +'</div>';

    $(boxid).append(html);
}

//Add rows layout
function addRowsLayout(rowColumn, boxid) {
	var boxid = boxid || '.layout-content';
	var html = '';
	$(boxid).html(html);
	if(rowColumn > 0 && rowColumn <= 12) {
		var column = layoutTotalColumn / rowColumn;
		for (var i = 1; i <= rowColumn; i++) {
			html += '<div class="col-md-'+column+'">'
                        +'<div class="layout-item-demo">'
                            +'<input type="text" class="form-control layout-column-value" name="layoutData[]" data-id="" value="col-md-'+column+'" />'
                        +'</div>'
                    +'</div>';
		}
	} else {
		alert('Lỗi giá trị nhập vào, Min: 1, Max: 12');
	}
	$(boxid).append(html);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
//-----------------------------------------------------------------------------------------------////
//-------------------------------- FUNCTION USING IN ALL PROGRAME -------------------------------////
//-----------------------------------------------------------------------------------------------////
/////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * UPDATE, REMOVE DATA
 * type: update, remove
 */
function updateData(formid, baseurl, divid, showpopup) {
	var showpopup 	= showpopup || 'popup';
	var type 		= type || 'update';
	var boxid		= divid+'-alert';
	var boxerror	= divid+'-message';
	var url 		= parse_url([app_url, app_page, baseurl]);
	if(!do_action_check(formid)) {
		var data 		= set_form_data(formid, formid+' .form-data', 'form', ['.form-data']);
		var detail 		= set_form_data(formid, formid+' .form-detail', 'detail', ['.form-detail']);
		var multi_level = set_form_data(formid, formid+' .form-multi-level', 'multi-level', ['.form-multi-level']);
		var form_data 	= new FormData();
		form_data.append('data', JSON.stringify(data));
		form_data.append('detail', JSON.stringify(detail));
		form_data.append('multi_level', JSON.stringify(multi_level));
		$.ajaxSetup({
			headers: {
				'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
			}
		});
		$.ajax({
			url: url,
			type: 'POST',
			data: form_data,
			contentType: false,
	        cache: false,
	        processData: false,
			beforeSend:function(){
				$(boxid).html('<div class="info"><i class="fa fa-spinner fa-pulse fa-1x fa-fw"></i> Đang xử lý. Chờ xíu...</div>');
				if(showpopup == 'popup') {
					showPopupAlert(5000);
				}
				hideMessage($defind_config_modal_error_box, $defind_config_time_alert);
				scrollTop($defind_config_modalbox);
			},
			success: function(response){
				data = response;
				$(boxid).fadeIn('slow').html('<div class="'+data.status+'">'+getIcon(data.status)+' '+data.alert+'</div>');
				if(typeof data.message !== 'undefined' && data.message.length > 0) {
					loadError(data.message, boxerror);
				}
				if(app_debug() == false) {
					reload(data.status);
				}
			}
		});
	}
}

/**
 * LOAD DATA | LOAD LIST
 * data: Giá trị truyền vào; VD: data = {type:'update', pages:pages}
 */
function removeData(data, baseurl, divid, showpopup) {
	var modules 	= modules || ''; //Module nào để tải dữ liệu cho đúng
	var showpopup 	= showpopup || 'popup';
	var type 		= type || 'update';
	var boxid		= divid+'-alert';
	var boxerror	= divid+'-message';
	var url 		= parse_url([app_url, baseurl]);
	var get 		= data;
	var form_data 	= new FormData();
	form_data.append('get', JSON.stringify(get));
	$.ajaxSetup({
		headers: {
			'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
		}
	});
	$.ajax({
		url: url,
		type: 'POST',
		data: form_data,
		contentType: false,
        cache: false,
        processData: false,
		beforeSend:function(){
			$(boxid).html('<div class="info"><i class="fa fa-spinner fa-pulse fa-1x fa-fw"></i> Đang xử lý. Chờ xíu...</div>');
			if(showpopup == 'popup') {
				showPopupAlert();
			}
			hideMessage($defind_config_modal_error_box, $defind_config_time_alert);
			scrollTop($defind_config_modalbox);
		},
		success: function(response){
			data = response;
			$(boxid).fadeIn('slow').html('<div class="'+data.status+'">'+getIcon(data.status)+' '+data.alert+'</div>');
			loadError(data.message);
			if(app_debug() == false) {
 				reload(data.status);
 			}
		}, error:function(){
 			if(app_debug() == false) {
 				alert('Lỗi! không  thể xóa dữ liệu, vui lòng kiểm tra lại')
 			}
        }
	});
}

/**
 * LOAD DATA | LOAD LIST
 * data: Giá trị truyền vào; VD: data = {type:'update', pages:pages}
 */
function loadData(data, baseurl, divid, showpopup, modules) {
	var modules 	= modules || ''; //Module nào để tải dữ liệu cho đúng
	var showpopup 	= showpopup || 'popup';
	var type 		= type || 'update';
	var boxid		= divid+'-alert';
	var boxerror	= divid+'-message';
	var url 		= parse_url([app_url, baseurl]) || baseurl;
	var get 		= data;
	var form_data 	= new FormData();
	form_data.append('get', JSON.stringify(get));
	$.ajaxSetup({
		headers: {
			'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
		}
	});
	$.ajax({
		url: url,
		type: 'POST',
		data: form_data,
		contentType: false,
        cache: false,
        processData: false,
		beforeSend:function(){
			$(boxid).html('<div class="info"><i class="fa fa-spinner fa-pulse fa-1x fa-fw"></i> Đang xử lý. Chờ xíu...</div>');
			if(showpopup == 'popup') {
				showPopupAlert();
			}
			hideMessage($defind_config_modal_error_box, $defind_config_time_alert);
			scrollTop($defind_config_modalbox);
		},
		success: function(response){
			data = response;
			$(boxid).fadeIn('slow').html('<div class="'+data.status+'">'+getIcon(data.status)+' '+data.alert+'</div>');
			loadError(data.message);
			if(data.status == 'success') {
				switch(modules) {
					case 'fields':
						loadFieldContent(data.detail);
						break;
					case 'moduleconfig':
						loadModuleConfig(data.data, divid);
						break;
					case 'moduleconfigupdate':
						loadModuleConfigData(data); //Load from database
						break;
					case 'permissions':
						loadPermission(data.data, '.autoload-permission');
						permissionSetData(data.permission);
						break;
					case 'permissiongroups':
						loadPermissionGroups(data.data, divid);
						break;
					case 'grouppermission':
						loadPermissionToGroups(data.data, divid); //DS permission để kéo vào permission group
						break;
					case 'media':
						loadMedia(data.data, divid);
						break;
					case 'mediafile':
						loadMedia(data.data, divid, 'mediafile');
						break;
					case 'layoutconfigs':
						loadLayoutConfig(data.data, divid); //Thiết lập các widget, content để hiển thị cho trang
						break;
					case 'layoutdataupdate':
						loadLayoutUpdate(data); //Thiết lập các widget, content để hiển thị cho trang
						break;
					case 'loadwidgetupdateinfo':
						loadWidgetUpdateInfo(data.data); //Thiết lập các widget, content để hiển thị cho trang
						break;
					case 'autoloadupdateinfo':
						autoloadUpdateInfo(data.data); //Dữ liệu tự lấy từ csdl và điền vào form tự động theo từng module
						break;
						/** Load data index page */
					case 'index-loadwidget':
						indexLoadWidget(data.data); //Dữ liệu tự lấy từ csdl và điền vào form tự động theo từng module
						break;
					default:
						main_form(data.data, '', divid, []);
						break;
				}
			}
		}, error:function(){
 			if(app_debug() == false) {
 				loadData(data, baseurl, divid, showpopup, modules);
 			}
        }
	});
}


/**
 * TẢI DỮ LIỆU TỰ ĐỘNG ĐIỀN VÀO FORM ĐỂ CẬP NHẬT DỮ LIỆU
 */
function autoloadUpdateInfo(data) {

	$.each(data, function(i, v) {

		$('#frmFormUpdate').find('[name="'+i+'"]').val(v);
		
		//selected multiple
		var keySelect 			= i+'_multipleselect';
		var keySelectInitial 	= i+'_multipleselect_initial';

		if(typeof data[keySelect] != 'undefined') {
			$('#frmFormUpdate').find('[name="'+i+'"]').attr('value', data[keySelect]);
			if(typeof data[keySelectInitial]  != 'undefined') {
				$('#frmFormUpdate').find('[name="'+i+'"]').attr('data-initial-value', data[keySelectInitial]);
			}
			resetFastSelect('[name="'+i+'"]', '.'+i+'_multipleselect');
		}

		var keyImage 			= i+'_images';
		if(typeof data[keyImage] != 'undefined') {
			$('#frmFormUpdate').find('.'+i+'_chooseimage .choose-image-review').html('<div class="form-group form-data-input form-text" data-type="input" data-name="'+i+'" data-key=""><input type="hidden" class="form-control" name="'+i+'" id="'+i+'" value="'+data[keyImage]+'"></div><div class="form-group"><img src="'+app_url+'/'+data[keyImage]+'" class="full-width"></div>');
		}



	})

}

/**
 * TẢI DỮ LIỆU UPDATE WIDGET
 */
function loadWidgetUpdateInfo(data) {

	var widget_id 		= data.widget_id;
	var widget_module 	= data.widget_module;
	var widget_title 	= data.widget_title;
	var widget_content 	= data.widget_content;
	var widget_info 	= data.widget_info;
	var widget_qty 		= data.widget_qty;
	var widget_state	= data.widget_state;
	var widget_style	= data.widget_style;
	var widget_folder	= data.widget_folder;
	var widget_status	= data.widget_status;
	var cate_id			= data.cate_id;
	var cate_initial	= data.cate_initial;
	var widcols_id		= data.widcols_id;
	var widcols_initial	= data.widcols_initial;

	//Ẩn các tabs
	loadWidgetForm(widget_module);
	$('.widgetTabs').find('li').addClass('hide');
	$('.widgetTabs').find('li').removeClass('active');
	$('.widgetTabs').find('[data-type="'+widget_module+'"]').parent().removeClass('hide');
	$('.widgetTabs').find('[data-type="'+widget_module+'"]').parent().addClass('active');

	//Hiển thị thông tin widget
	$('[name="widget_id"]').val(widget_id);
	$('[name="txtWidgetName"]').val(widget_title);
	setContent('editor', widget_content);	
	$('[name="txtWidgetQty"]').val(widget_qty);
	selectedByValue('[name="sltWidgetSate"]', widget_state);
	$('[name="txtWidgetStyle"]').val(widget_style);
	$('[name="txtWidgetFolder"]').val(widget_folder);
	$('input[name="rdoWidgetStatus"][value="'+widget_status+'"]').prop('checked', true);

	//selected category widget
	if(cate_id != '') {
		$('[name="sltWidgetType"]').attr('value', cate_id);
		$('[name="sltWidgetType"]').attr('data-initial-value', cate_initial);	
		resetFastSelect('[name="sltWidgetType"]', '.fastselectbox'); //Khởi động lại fastselect khi thêm add value vào bằng js
	}
	
	if(widcols_id != '') {
		$('[name="sltWidgetColumn"]').attr('value', widcols_id);
		$('[name="sltWidgetColumn"]').attr('data-initial-value', widcols_initial);	
		resetFastSelect('[name="sltWidgetColumn"]', '.fastselectbox1'); //Khởi động lại fastselect khi thêm add value vào bằng js
	}
	
	//Check widget info hiển thị
	if(widget_info.length > 0) {
		$.each(widget_info, function(i_info, v_info) {
			$('[value="'+v_info+'"]').prop('checked', true);
		});
	}

}

/**
 * TẢI DỮ LIỆU LÊN ĐỂ CHỈNH SỬA LAYOUT
 */
function loadLayoutUpdate(data) {

	var html = '';
	var boxid;
	var index;

	var layout_id 		= data.layout_id;
	var layout_name 	= data.layout_name;
	var layout_pages 	= data.layout_pages;
	var layout_initial 	= data.layout_initial;
	var layout_data 	= data.data;

	//Set info
	$('[name="id"]').val(layout_id);
	$('#layoutName').val(layout_name);
	$('#layoutSelectPages').attr('value', layout_pages);
	$('#layoutSelectPages').attr('data-initial-value', layout_initial);

	resetFastSelect('[name="pages"]', '.fastselectbox');//reset fastselected

	$.each(layout_data, function(i_block, v_block) {

		boxid 	= '.layout-'+i_block;

		index 	= 0;

		$.each(v_block, function(i, v) {

			html = '<div class="layout-items rowsitem'+i_block+index+'" data-block-id="'+v.block.id+'" data-type="'+i_block+'" data-rows="'+index+'">'
                    +'<div class="layout-column">'
                    	+'<div class="form-detail-data" data-type="input" data-name="layoutColumn" data-rows="'+i_block+index+'">'
                        	+'<input type="number" class="form-control" name="layoutColumn" id="layoutColumn'+i_block+index+'" data-type="'+i_block+'" data-rows="'+index+'" value="'+v.column+'" />'
                        +'</div>'
                        +'<button type="button" class="btn btn-danger full-width btn-sml removeLineLayout" data-rel="item'+i_block+index+'"><i class="fa fa-trash" aria-hidden="true"></i> Xóa</button>'
                    +'</div>'
                    +'<div class="layout-content layout-rows'+i_block+index+'">'
                    
                

			$.each(v.detail, function(i_detail, v_detail) {

				// console.log(v_detail.class)
				html += '<div class="'+v_detail.class+'">'
                            +'<div class="layout-item-demo">'
                                +'<input type="text" class="form-control layout-column-value" name="layoutData[]" id="layoutData'+i_block+index+'" data-id="'+v_detail.id+'" data-type="'+i_block+'" data-rows="'+index+'" value="'+v_detail.class+'" />'
                            +'</div>'
                        +'</div>'

			});

			html += '</div></div>';

			index++;

			$(boxid).append(html);

		});

	});


}

/**
 * CẤU HÌNH THÊM CÁC WIDGET, CONTENT VÀO BLOCK ĐỂ HIỂN THỊ LÊN GIAO DIÊN
 */
function loadLayoutConfig(data, divid) {

	var boxid = divid, html='', layout_config_html = '';

	if(typeof data != 'undefined') {

		//body
		$.each(data, function(i, v) {

			//add new rows
			html += '<div class="row"><div class="col-md-12 layout-rows-group">';

			$.each(v, function(i_block, v_block) {

				$.each(v_block.detail, function(i_detail, v_detail) {

					layout_config	= v_detail.layout_config;

					layout_config_html	= '';

					if(layout_config.length > 0) {

						$.each(layout_config, function(i_layout, v_layout) {
							layout_config_html += '<div class="list-group-item group-item'+i_layout+'" data-type="'+v_layout.type+'" data-id="'+v_layout.widget_id+'">'
													+v_layout.widget_title
													+'<span class="cl-red pull-right layourconfig-remove-group-items layout-remove-buttons" data-id="'+v_layout.widget_id+'">X</span>'
												+'</div>';
						})

					}

					//add new rows
					html += '<div class="'+v_detail.class+' layout-item-demo" detail-id="'+v_detail.id+'"><div id="layout'+i+i_block+(i_detail+1)+'" class="layout-group">'+layout_config_html+'</div></div>';

				});
				
			});

			html += '</div></div>';

			$(boxid).html(html);

			$('.layout-data').find('.layout-group').each(function() {
				
				var boxid 		= $(this).attr('id');
				
				new Sortable(document.getElementById(boxid), {
					group: {
						name: 'shared',
						pull: false // To clone: set pull to 'clone'
					},
					animation: 150
				});
			});

		});

	}

}

function loadLayoutConfig_old(data, divid) {

	var boxid;

	if(typeof data != 'undefined') {

		$.each(data, function(i, v) {

			var boxid = '.layout-'+i; //load to box //layout-header, layout-body, layout-footer

			var html = '';

			if(v.length > 0) {

				$.each(v, function(index, value) {

					var block	= value.block;
					var detail  = value.detail;
					var layout_config, layout_config_html = '';

					//add new rows
					html += '<div class="row"><div class="col-md-12 layout-rows-group">';

					if(detail.length > 0) {

						$.each(detail, function(i_detail, v_detail) {

							layout_config	= v_detail.layout_config;

							if(layout_config.length > 0) {

								layout_config_html	= '';

								$.each(layout_config, function(i_layout, v_layout) {
									layout_config_html += '<div class="list-group-item group-item'+i_layout+'" data-type="'+v_layout.type+'" data-id="'+v_layout.widget_id+'">'
															+v_layout.widget_title
															+'<span class="cl-red pull-right layourconfig-remove-group-items layout-remove-buttons" data-id="'+v_layout.widget_id+'">X</span>'
														+'</div>';
								})

							}


							html += '<div class="'+v_detail.class+' layout-item-demo" detail-id="'+v_detail.id+'"><div id="layout'+index+(i_detail+1)+'" class="layout-group">'+layout_config_html+'</div></div>';
							
						});

					}

					html += '</div></div>';

				});

			}

			$(boxid).html(html)

			$('.layout-data').find('.layout-group').each(function() {

				var boxid 		= $(this).attr('id');
				
				new Sortable(document.getElementById(boxid), {
					group: {
						name: 'clone',
						pull: false // To clone: set pull to 'clone'
					},
					animation: 150
				});
			});

		});

	}

}

/**
 * LOAD MEDIA
 */
function loadMedia(data, divid, type) {

	var type = type || 'media';

	var folderBox 	= divid+'-column ul';
	var fileBox 	= divid+'-column .file-list';
	
	var file_html 	= '';

	if(type == 'media') {

		var folder_html = '';

		if(typeof data !== 'undefined' && data.folder.length > 0) {

			$.each(data.folder, function(i_folder, v_folder) {

				folder_html	+= '<li class="loadfile" data-id="'+v_folder.id+'">'
	                                +'<span class="media-icon"><i class="fa fa-folder" aria-hidden="true"></i></span>'
	                                +'<span class="media-name"> '+v_folder.name+'</span>'
	                            +'</li>';

			});

		}

		$(folderBox).html(folder_html);

	}

	if(typeof data !== 'undefined' && data.file.length > 0) {

		var filePathURL;

		$.each(data.file, function(i_file, v_file) {

			filePathURL	= parse_url([app_url, v_file.path]);

			file_html	+= '<div class="file-list-items">'
                                +'<input type="radio" class="choose-file-media" name="checkUseImage" data-path="'+v_file.path+'" data-full-path="'+filePathURL+'" value="'+v_file.id+'" />'
                                +'<div class="file-image-items">'
                                    +'<img src="'+filePathURL+'" alt="" class="file-images">'
                                +'</div>'
                                +'<div class="file-bg-items"></div>'
                            +'</div>';

		});

	}
	
	$(fileBox).html(file_html);

}

function loadModuleConfigData(data) {

	if(typeof data.data !== 'undefined') {

		$.each(data.data, function(i, v) {
			$('[name="'+i+'"]').attr('value', v);
		});

		$('[name="moduleType"]').attr('data-initial-value', data.data.pageInitial);

		resetFastSelect('[name="moduleType"]', '.fastselectbox'); //Khởi động lại fastselect khi thêm add value vào bằng js
	}

	if(typeof data.detail !== 'undefined') {
		$.each(data.detail, function(ind, val) {
			addModuleConfigDetail({label: val.label, value: val.name, class: val.class}, '.modules-detail');
		});
	}

	/**
	 * LOAD FILLABLE
	 * Hiển thị danh sách các cột để check cho phép hiển thị trong ds hay không?
	 */
	if(typeof data.fillable !== 'undefined' && data.fillable.length > 0) {
		loadModuleConfig(data.fillable, '.modules-list');
	}

	if(typeof data.fillablechecked !== 'undefined' && data.fillablechecked.length > 0) {
		moduleConfigChecked(data.fillablechecked);
	}

}

/**
 * MODULE CONFIG CHECKED
 * LOAD FROM DATABASE
 */
function moduleConfigChecked(data) {

	if(data.length > 0 ) {

		$.each(data, function(i, v) {

			checkedIcheck('#modules'+v);

		});

	}

}

/**
 * LOAD DATA MODULE CONFIG
 * Cấu hình hiển thị danh sách từng module
 */
function loadModuleConfig(data, boxid) {

	var html = '';
	var moduleName;

	if(data.length > 0 ) {

		$(boxid).html(html);

		$.each(data, function(i, v) {

			moduleName	= v.name;

			html += '<div class="form-group">'
		                +'<input type="checkbox" class="minimal-red moduleconfig-list" id="modules'+moduleName+'" data-name="'+v.label+'" value="'+moduleName+'">'
		                +'<label for="modules'+moduleName+'" class="no-strong"> <span class="padding"></span>'+v.label+'</label>'
		            +'</div>'

		});

	}

	$(boxid).html(html);

	importIcheck();

}

//ADD DETAIL BOX
function addModuleConfigDetail(data, boxid) {
	var selectedValue 	= data.value || 'Unknown';
	var selectedLabel 	= data.label || 'Unknown';
	var selectedWidth 	= data.width || '';
	var selectedClass 	= data.class || 'Unknown';
	var selectedType 	= data.type || 'Unknown';
	var selectedShow 	= data.show || 'Unknown';
	$('[value="'+selectedClass+'"]').prop('selected', true);
	$(boxid).append('<li class="rows-'+selectedValue+'">'
                                        +'<span class="handle"><i class="fa fa-long-arrow-up"></i><i class="fa fa-long-arrow-down"></i>'
                                            +'<input type="hidden" name="detailModuleName[]" value="'+selectedValue+'" readonly />'
                                            +'<input type="hidden" name="detailModuleLabel[]" value="'+selectedLabel+'" readonly />'
                                            +'<span class="detail-module-items">'+selectedLabel+'</span>'
                                            +'<span class="padding"><input type="text" name="detailModuleWidth[]" value="'+selectedWidth+'" placeholder="Width" /></span>'
                                            +'<span class="padding">'
                                                +'<select class="" name="detailModuleClass[]">'
                                                    +'<option value="text-left">Bên trái</option>'
                                                    +'<option value="text-center">Ở giữa</option>'
                                                    +'<option value="text-right">Bên phải</option>'
                                                +'</select>'
                                            +'</span>'
                                            +'<span class="padding">'
                                                +'<select class="" name="detailModuleType[]">'
                                                    +'<option value="text">Text</option>'
                                                    +'<option value="number">Number</option>'
                                                +'</select>'
                                            +'</span>'
                                            +'<span class="padding">'
                                                +'<select class="" name="detailModuleShow[]">'
                                                    +'<option value="text">Text</option>'
                                                    +'<option value="yesno">Button Yes/No</option>'
                                                +'</select>'
                                            +'</span>'
                                        +'</span>'
                                    +'</li>');
}

/**
 * LOAD DATA | LOAD LIST
 * data: Giá trị truyền vào; VD: data = {type:'update', pages:pages}
 */
function loadAPIData(baseurl, boxid, modules) {
	var modules 	= modules || ''; //Module nào để tải dữ liệu cho đúng
	var url 		= parse_url([app_url, baseurl]);
	var form_data 	= new FormData();
	form_data.append('get', 'getjson');
	$.ajaxSetup({
		headers: {
			'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
		}
	});
	$.ajax({
		url: url,
		type: 'GET',
		data: form_data,
		contentType: false,
        cache: false,
        processData: false,
		beforeSend:function(){
			console.log('Waiting...')
		},
		success: function(response){
			data = response;
			if(data.status == 'success') {
				switch(modules) {
					case 'permissions':
						loadPermission(data, boxid);
						break;
					default:
						//No thing
						break;
				}
			}
		}
	});
}

/**
 * TẢI DS PERMISSIONGROUPS
 */
function loadPermissionGroups(data, boxid) {

	var sortableID;
	var html 		= '';
	var detail_html = '';

	if(data.length > 0) {

		$.each(data, function(i, v) {

			detail_html = '';

			if(typeof v.detail != 'undefined' && v.detail.length > 0) {

				$.each(v.detail, function(index, value) {

					detail_html += '<div class="list-group-item permission-group-item'+value.id+'">'
										+'<input type="hidden" class="form-control" name="PermissionGroupDetailID[]" value="'+value.id+'">'
										+'<input type="hidden" class="form-control" name="PermissionGroupDetailName'+value.id+'" value="'+value.name+'">'
										+'<span>'+value.name+'</span>'
										+'<span class="btn btn-sml cl-white bg_red pull-right permissiongroup-remove-buttons" data-id="'+value.id+'">X</span>'
									+'</div>'

				});

			} 

			sortableID	= 'sortable-data'+(i+1);

			html +=	'<div class="permissiongroup-list" data-id="'+v.id+'">'
						+'<h5 class="bold">'+v.name+'</h5>'
						+'<div id="'+sortableID+'" class="sortable-list permissiongroup-items" data-pull="true">'+detail_html+'</div>'
                    +'</div>'
                    

		});

	}

	$(boxid).html(html);

	useSortable('.sortable-list');

}

function loadPermissionToGroups(data, boxid) {

	var html 			= '';
	var detail_html 	= '';

	if(data.length > 0) {

		$.each(data, function(i, v) {

			html += '<div class="list-group-item permission-group-item'+v.id+'">'
						+'<input type="hidden" class="form-control" name="PermissionGroupDetailID[]" value="'+v.id+'" />'
	                    +'<input type="hidden" class="form-control" name="PermissionGroupDetailName'+v.id+'" value="'+v.name+'">'
						+'<span>'+v.name+'</span>'
						+'<span class="btn btn-sml cl-white bg_red pull-right permissiongroup-remove-buttons" data-id="'+v.id+'">X</span>'
					+'</div>';

		});

	}

	$(boxid).html(html);

	useSortable('.sortable-list');

}

/**
 * TẢI DS CÁC PERMISSION
 * SỬ DỤNG ĐỂ CHECK PHÂN QUYỀN CHO USER VÀ NHÓM
 */
function loadPermission(data, boxid) {

	var html = '<div class="croll-box">', detail_html='';
	var permission_data, permission_detail, values, detail_value;
	
	if(typeof data != 'undefined' && data.length > 0) {

		$.each(data, function(i, v){

			permission_data		= v.data;
			permission_detail	= v.detail;

			values = permission_data.value;

			detail_html	='';

			if(permission_detail.length > 0) {

				$.each(permission_detail, function(i_detail, v_detail) {

					detail_value = v_detail.value;

					detail_html += '<div class="form-group">'
                                        +'<input type="checkbox" class="minimal-red check-parent '+values+'_check" data-parent="'+values+'_check" id="'+values+'_'+detail_value+'" name="'+values+'Permission[]" value="'+detail_value+'">'
                                        +'<label for="'+values+'_'+detail_value+'" class="no-strong">'+v_detail.name+'</label>'
                                    +'</div>';
				});
			}

			html += '<div class="row">'
                        +'<div class="col-md-7">'
                            +'<div class="header-group">'
                                +'<input type="hidden" name="'+values+'CheckId" id="'+values+'CheckId" value="">'
                                +'<input type="hidden" name="'+values+'CheckOrder" id="'+values+'CheckOrder" value="'+i+'">'
                                +'<input type="checkbox" class="minimal-red" id="'+values+'_check" name="chkPermission[]" value="'+values+'">'
                                +'<label for="'+values+'_check">'+permission_data.name+'</label>'
                            +'</div>'
                            +'<small>'+permission_data.description+'</small>'
                        +'</div>';
            html += 	'<div class="col-md-5 config-permission">';
           	html += 		detail_html;
           	html += 	'</div>';
           	html += '</div>';

		});

		html += '</div>';

	}

	$(boxid).html(html);
	
	importIcheck(); //Add icheck js

}

/**
 * TẢI DS FIELD
 */
function loadFieldContent(data, boxid) {

	if(data.length > 0) {

		$.each(data, function(i, v) {

			var id 			= v.id;
			var label 		= v.fdetail_label; //Field label
			var name 		= v.fdetail_name; //Field label
			var pages		= v.pages;
			var modules 	= v.fdetail_type;
			var groups		= v.groups;
			var index 		= i+1; //rows-data
			var useFrontend	= v.fdetail_frontend;
			var rows_group;
			
			add_fields_html($defind_config_field_box_content, pages, '', useFrontend); //Add field

			load_field_data(index, v); //Show data from database
			set_header_fields(index, label, name, modules);

			// return false;

			if(typeof groups != 'undefined' && groups.length > 0) {

				$.each(groups, function(i_group, v_group) {

					add_fields_group(index, $defind_config_field_box_groups);

					rows_group = i_group + 1;
					load_field_groups_data(index, rows_group, v_group); //Show data from database

				});

			}

		});

		set_auto_row();

	} else {
		if(app_debug()) {
			console.log('Tải dữ liệu lên thất bại: Không tồn tại dữ liệu');
		}
	}

}


/////////////////////////////////////////////////////////////////////////////////////////////////////
//-----------------------------------------------------------------------------------------------////
//----------------- TẢI DỮ LIỆU LÊN DATATABLE ---------------------------------------------------////
//-----------------------------------------------------------------------------------------------////
/////////////////////////////////////////////////////////////////////////////////////////////////////
function loadServerSideAjax(tbid, url, setWidth, pageLength, order, search, paging) {
	var show_total 	= show_total || [2,3,4];
	var rows		= pageLength || 10;
	var order 		= order || [0,'asc'];
	var searchbox 	= 1;
	var paging 		= parseInt(paging) == 0 ? false : true;
	var button 		= button || [];
	var fixcol 		= fixcol || 0;
	var editor;
    $.fn.dataTable.ext.errMode = 'throw';
	var table = $(tbid).DataTable({
		scrollX: true,
		autoWidth: true,
		scrollCollapse: true,
		serverSide: true,
		processing: true,
        ordering: false,
        searching: searchbox,
        searchDelay: 400,
        orderCellsTop: false,
        fixedHeader: false,
		"ajax": {
			url: url,
			type: 'POST',
			headers: {
	            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
	        }
		},
		columnDefs: setWidth,
		pageLength: rows,
		paging 	: paging,
		lengthChange: false,
		dom: 'Bfrtip',
		order: [order],
		fixedColumns:   {
            leftColumns: fixcol
        },
		language: {
			search: "",
			searchPlaceholder: "Nhập từ khóa tìm kiếm",
			"emptyTable": "Dữ liệu đang được cập nhật",
			"processing": '<div id="mt-apploading"><span class="sk-cube sk-cube1"></span><span class="sk-cube sk-cube2"></span><span class="sk-cube sk-cube3"></span><span class="sk-cube sk-cube4"></span><span class="sk-cube sk-cube5"></span><span class="sk-cube sk-cube6"></span><span class="sk-cube sk-cube7"></span><span class="sk-cube sk-cube8"></span><span class="sk-cube sk-cube9"></span></div>'
		},
		select: {
            style:    'os',
            selector: 'td:first-child'
        },
		"drawCallback": function( settings ) {
	        //$(".btnPrint").printPage();
	    },
	    "createdRow": function ( row, data, index ) {
            //
        },
	    "footerCallback": function ( row, data, start, end, display ) {
            var api = this.api(), data;
            var intVal = function ( i ) {
                return typeof i === 'string' ?
                    i.replace(/[\$,]/g, '')*1 :
                    typeof i === 'number' ?
                        i : 0;
            };
        }
	});
}


/////////////////////////////////////////////////////////////////////////////////////////////////////
//-----------------------------------------------------------------------------------------------////
//-------------------------------- PHÂN QUYỀN ---------------------------------------------------////
//-----------------------------------------------------------------------------------------------////
/////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * CHECKED
 * Lấy các quyền hạn được check
 * Nếu quyền cao nhất không check thì vô nghĩa
 */
function getPermissionChecked(formid) {
	var data	= [];
	var permissionParent 	= pushdata(formid, 'chkPermission[]', ':checked');
	$.each(permissionParent, function(i, v) {
		data.push({
			id: formid.find('[name="'+v+'CheckId"]').val(),
			config: v,
			permission: pushdata(formid, v+'Permission[]', ':checked'),
			order: formid.find('[name="'+v+'CheckOrder"]').val()
		});
	});
	return data;
}

//Phân tích, để check quyền hạn sau khi load từ database
function permissionSetData(data) {

	if(typeof data !== 'undefined') {

		$.each(data, function(i, v){

			$('#'+v.modules+'CheckId').val(v.id);

			$('#'+v.modules+'_check').iCheck('check');

			permission = JSON.parse(v.permission);

			$.each(permission, function(index, val) {

				//v.modules: config if config
				//val: view if view
				$('#'+v.modules+'_'+val).iCheck('check');

			});

		});

	}

}

$(function() {
	$(document).on('click', '.loadfile', function() {
		$('.loadfile').removeClass('actived');
		$(this).addClass('actived');
	});
});

$(function() {

	//Load auto module
	switch (app_action) {
		case 'create':
		case 'update':
			//Load form mặc định, sử dụng autoload form
			var baseurl = parse_url([app_page, 'fields', 'json']);
			loadData([{themes: app_themes},{pages: app_module}], baseurl, $defind_config_field_box_content, 'alert');
			
			//Tải dữ liệu cập nhật lên form
			var baseurl = parse_url([app_page, app_module, 'update-json']);
			loadData([{id: app_loadid}, {pages: app_module}], baseurl, '.modal', 'alert', 'autoloadupdateinfo');
			break;
		default:
			//Ngược lại nếu là list thì ko làm gì hết
			break;
	}

	$(document).on('click', '.btnsaveaction', function() {

		var $el 	= 'form#frmFormUpdate';

		var baseurl	= parse_url([app_module, app_action]);

		updateData($el, baseurl, '.modal', 'popup');

	});

	/**
	 * XÓA DỮ LIỆU
	 * Các module mặc định
	 */
	$(document).on('click', '.btnRemoveAction', function() {
		var type 	= $(this).attr('data-type'); //Áp dụng cho module nào? trang nào?
		var id 		= $(this).attr('data-id');
		var baseURL = parse_url([app_page, app_module, 'remove']);
		if(confirm_remove('Bạn có chắc muốn xóa dữ liệu? Dữ liệu sau khi xóa sẽ không thể phục hồi')) {
			removeData([{'id': id, 'modules': type}], baseURL, '.modal');
		}
	});


});

$(function() {

    var express_fields_add  =  {
                    title: 'Thêm trang',
                    class: 'form-data',
                    feilds: {
                        // types: {
                        //     key: 'type',
                        //     label: '',
                        //     type: 'text',
                        //     empty: true,
                        //     class: 'form-control',
                        //     modules: 'text',
                        //     value: 'create',
                        //     readonly: 'readonly',
                        // },
                        page_title: {
                            label: 'Tên Trang/Module',
                            type: 'text',
                            empty: true,
                            class: 'form-control',
                            modules: 'text',
                            value: ''
                        },
                        page_modules: {
                            key: 'modules',
                            label: 'Modules',
                            type: 'text',
                            empty: true,
                            class: 'form-control',
                            modules: 'text',
                            value: '',
                            change: "changeAndSetValue('\#page_keyword\', [\'#page_modules\', \'#page_pages\'])"
                        },
                        page_pages: {
                            label: 'Trang Danh sách / Chi tiết',
                            type: 'select',
                            empty: false,
                            class: 'form-control',
                            modules: 'select',
                            options: [{name: 'Trang danh sách', value: 'list'}, {name: 'Trang chi tiết', value: 'detail'}],
                            value: '',
                            change: "changeAndSetValue('\#page_keyword\', [\'#page_modules\', \'#page_pages\'])"
                        },
                        page_keyword: {
                            label: 'Key Modules',
                            type: 'text',
                            empty: true,
                            readonly: 'readonly',
                            class: 'form-control',
                            modules: 'text',
                            value: ''
                        },
                        page_type: {
                            label: 'Loại trang',
                            type: 'select',
                            empty: false,
                            class: 'form-control',
                            modules: 'select',
                            options: [{name: 'Trang', value: 'pages'}, {name: 'Module', value: 'modules'}],
                            value: ''
                        },
                        page_status: {
                            label: 'Trạng thái',
                            type: 'checkbox',
                            empty: false,
                            class: '',
                            modules: 'checkbox',
                            options: [{name: 'Áp dụng', value: '1'}],
                            actived: 'checked',
                        }
                    },
                    buttons: [
                        {
                            action: '',
                            type: 'button', 
                            class: 'btn btn-success btn-sm btnaddpageexpressaction',
                            icon: '<i class="fa fa-pencil-square-o"></i>', 
                            text: 'Cập nhật'
                        }
                    ]
                };

	//THAY ĐỔI FIELD_ORDER
    $(document).on('change', '.setRowsOrder', function() {
        var boxid   = $(this).attr('data-input');
        var values  = $(this).val();
        $('#'+boxid).val(values);
    });

    //THAY ĐỔI FIELD USE FONTEND || CÓ CHO PHÉP SỬ DỤNG Ở FRONT END HAY KHÔNG????
    $(document).on('change', '.setRowUseFrontend', function() {
        var values  = $(this).is(':checked') ? $(this).val() : 0;
        var boxid   = $(this).attr('data-input');
        $('#'+boxid).val(values);
    });

    //THAY ĐỔI LOẠI TRANG
    $('#sltChoosePages').on('change', function() {
        var values = $(this).val();
        set_auto_row('', values);
        //Xóa nội dung field đã add (Làm rỗng ds field, yêu cầu phải chọn trang trước)
        $($defind_config_field_box_content).html('');
        //Load data
        var baseurl = parse_url([app_page, 'fields', 'info']);
        loadData([{themes: app_themes},{pages: values}], baseurl, $defind_config_field_box_content, 'alert', 'fields');
    });

    //Thay đổi loại Field
    $(document).on('change', '.chooseFieldType', function() {
        var $el = $('option:selected', this);
        var $id = $el.attr('data-id');
        var $value = $el.val();
        autoload_fields($id, $value);
    });

    //Xóa Field
    $(document).on('click', '.btnremovefield', function() {
        var $id     = $(this).attr('data-id');
        var $type   = $(this).attr('data-type');
        var $box    = '.rows-group'+$id;
        remove_fields_html($type, $box);
    });

    //Xóa Field Group
    $(document).on('click', '.removegroups', function() {
        var id = $(this).attr('data-id');
        var box = '.rowsbox'+id;
        remove_fields_group_html(id, 'hide', box);
    });

    //Thêm Field
    $('.btnaddfields').on('click', function() {
        var pages = $('#sltChoosePages').val();
        add_fields_html($defind_config_field_box_content, pages);
        set_auto_row();
    });

    //Thêm Field Group
    $(document).on('click', '.btnaddfildsgroup', function() {
        var $id     = $(this).attr('data-id');
        add_fields_group($id, $defind_config_field_box_groups);
    });

    /**
     * Khi nhập Field Label
     * Lấy thông tin hiển thị lên header collapse
     */
    $(document).on('change', '.fields-label', function() {       
        var $id     = $(this).attr('data-id');
        var $value  = $(this).val();
        var $type   = $('#fdetail_type'+$id+' option:selected').val();
        set_header_fields($id, $value, '', $type);
    });

    //Thêm trang nhanh
    $('.btnaddpageexpress').on('click', function() {
        main_form(express_fields_add, $defind_config_modalbox, $defind_config_modal_content);
    });

    //Thực hiện thêm mới trang
    $(document).on('click', '.btnaddpageexpressaction', function() {
        //type, formid, baseurl, boxid, showpopup
        var $el = '#frmModalBox';
        updateData($el, 'pages/post-create', '.modal', 'alert');
    });

    /**
     * THÊM MỚI TRƯỜNG DỮ LIỆU | ADD FIELD ACTION
     */
    $('.btnSaveFeildAction').on('click', function() {
        var $el     = 'form#frmFormUpdate';
        var types   = $($el).find('[name="txtType"]').val();
        var modules = $($el).find('[name="txtModule"]').val();
        var baseurl = parse_url([modules, types]);
        updateData($el, baseurl, '.modal', 'popup');
    });

});

$(function() {

    //LOAD MODULE CONFIG DATA
    if(app_action == 'update') {
        switch (app_module) {
            case 'moduleconfig':
                if(app_loadid != '') {
                    var baseurl     = parse_url([app_page, app_module, app_action, app_loadid]);
                    loadData([{themes: app_themes}], baseurl, '', 'alert', 'moduleconfigupdate');
                }
                break;
        }
    }

    //Thay đổi trang (modules), thì hiển thị ds các cột có thể hiển thị
    $('[name="moduleType"]').on('change', function() {
        var modules = $(this).val();
        var baseurl = parse_url([app_page, 'moduleconfig', 'json']);
        loadData([{themes: app_themes},{pages: modules}], baseurl, '.modules-list', 'alert', 'moduleconfig');
    });

    
    /**
     * ADD DETAIL
     * Cấu hình chi tiết cách hiển thị danh sách: field? width?...
     */
    $(document).on("ifChanged", '.moduleconfig-list', function (event) {
        var selectedValue   = $(this).val();
        var selectedLabel   = $(this).attr('data-name');
        //Nếu là checked
        if(event.target.checked == true) {
            addModuleConfigDetail({label: selectedLabel, value: selectedValue}, '.modules-detail');
        } else {
            $('.rows-'+selectedValue).remove();
        }
        
    });

    /**
     * UPDATE DATA
     */
    $('.btnmoduleconfigsaveaction').on('click', function() {
        var $el = $('form#frmFormUpdate');
        baseurl = parse_url(['moduleconfig', 'create']);
        updateModuleConfig($el, baseurl, '.modal');
    });


});

//CẬP NHẬT MODULE CONFIG
function updateModuleConfig(formid, baseurl, divid, showpopup) {

    var showpopup   = showpopup || 'popup';
    var type        = type || app_action;
    var boxid       = divid+'-alert';
    var boxerror    = divid+'-message';
    var module_type = formid.find('[name="moduleType"]').val();
    var module_name  = formid.find('[name="moduleName"]').val();
    var module_length = formid.find('[name="moduleLength"]').val();
    var module_order = formid.find('[name="moduleOrder"]').val();
    var module_sort = formid.find('[name="moduleSort"]').val();
    //Xử lý chi tiết
    var module_details = moduleDetailChecked(formid);
    //Append data
    var form_data = new FormData();
    form_data.append('module_type', module_type);
    form_data.append('module_name',module_name);
    form_data.append('module_length',module_length);
    form_data.append('module_order',module_order);
    form_data.append('module_sort',module_sort);
    form_data.append('module_details', JSON.stringify(module_details));
    //Xử lý file
    var url     = parse_url([app_url, app_page, baseurl]);
    if(!do_action_check(formid)) {
        $.ajaxSetup({
            headers: {
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            }
        });
        $.ajax({
            url: url,
            type: 'POST',
            data: form_data,
            contentType: false,
            cache: false,
            processData: false,
            beforeSend:function(){
                $(boxid).html('<div class="info"><i class="fa fa-spinner fa-pulse fa-1x fa-fw"></i> Đang xử lý. Chờ xíu...</div>');
                if(showpopup == 'popup') {
                    showPopupAlert(5000);
                }
                hideMessage($defind_config_modal_error_box, $defind_config_time_alert);
                scrollTop($defind_config_modalbox);
            },
            success: function(response){
                data = response;
                $(boxid).fadeIn('slow').html('<div class="'+data.status+'">'+getIcon(data.status)+' '+data.alert+'</div>');
                if(typeof data.message !== 'undefined' && data.message.length > 0) {
                    loadError(data.message, boxerror);
                }
                if(app_debug() == false) {
                    reload(data.status);
                }
            }
        });
    }

}

/**
 * LẤY THÔNG TIN CHI TIẾT FIELD HIỂN THỊ
 */
function moduleDetailChecked(formid) {
    var detailName  = pushdata(formid, 'detailModuleName[]');
    var detailLabel = pushdata(formid, 'detailModuleLabel[]');
    var detailWidth = pushdata(formid, 'detailModuleWidth[]');
    var detailClass = pushdata(formid, 'detailModuleClass[]');
    var detailType  = pushdata(formid, 'detailModuleType[]');
    var data = [];
    $.each(detailName, function(i, v) {
        data.push({
            keys: v,
            name: detailName[i],
            label: detailLabel[i],
            width: detailWidth[i],
            class: detailClass[i],
            type: detailType[i]
        });
    });
    return data;
}

$(function() {

	$('.checkpasswordequal').on('keyup', function() {
		do_equal_password('#txtPassword', '#retxtPassword', 'button.btnuserupdateaction');
	});

	$('#txtEmail').on('keyup', function() {
		do_email('#txtEmail');
	});

	$('.btnuserupdateaction').on('click', function() {

		var $el 	= $('form#frmFormUpdate');

		updateUser($el, 'users/create', '.modal');

	});

	//LOAD PERRMISSION
	if((app_module == 'users' || app_module == 'groups') && (app_action == 'create' || app_action == 'update')) {
		var url_extends = '';
		if(app_action == 'update') {
			var $getUrl 	= get_url();
			var $loadID		= $getUrl.loadid;
			url_extends 	= '?type='+app_module+'&loadid='+ $loadID;
		}
		var baseurl		= parse_url([app_page, 'permissions'+url_extends]);
		loadData([{themes: app_themes}], baseurl, '.autoload-permission', 'alert', 'permissions');
	}

	/**
	 * KIỂM TRA CHECK PARENT NẾU TỒN TẠI CHECK CHILD
	 */
	$(document).on("ifChanged", '.check-parent', function () {
		var checkParent	= $(this).attr('data-parent');
		var countRows 	= $('.check-parent.'+checkParent).filter(":checked").length;
		// console.log(countRows);
		if(countRows > 0) {
			$('#'+checkParent).iCheck('check');
		} else {
			$('#'+checkParent).iCheck('uncheck');
		}
	});

});

function updateUser(formid, baseurl, divid, showpopup) {
	var showpopup 	= showpopup || 'popup';
	var type 		= type || app_action;
	var boxid		= divid+'-alert';
	var boxerror	= divid+'-message';
	var user_id 	= formid.find('[name="txtUserId"]').val();
	var group_id 	= formid.find('[name="txtUserGroup"]').val();
	var username 	= formid.find('[name="txtUserName"]').val();
	var password	= formid.find('[name="txtPassword"]').val();
	var fullname	= formid.find('[name="txtFullName"]').val();
	var email		= formid.find('[name="txtEmail"]').val();
	var phone 		= formid.find('[name="txtPhone"]').val();
	var sex 		= formid.find('[name="txtUserSex"]').val();
	var status 		= formid.find('[name="rdoStatus"]:checked').val();
	var oldImage	= formid.find('[name="oldImage"]').val();
	//Xử lý phân quyền
	var permissions 		= getPermissionChecked(formid);
	//Append data
	var form_data = new FormData();
	form_data.append('type', type);
	form_data.append('user_id',user_id);
	form_data.append('group_id',group_id);
	form_data.append('username',username);
	form_data.append('password',password);
	form_data.append('fullname',fullname);
	form_data.append('email',email);
	form_data.append('phone',phone);
	form_data.append('sex',sex);
	form_data.append('oldImage',oldImage);
	form_data.append('status',status);
	form_data.append('permissions', JSON.stringify(permissions));
	//Xử lý file
	var file_img = $('#images').prop('files')[0];
	form_data.append('images', file_img);
	var url		= parse_url([app_url, app_page, baseurl]);
	if(!do_action_check(formid) && !do_equal_password('#txtPassword', '#retxtPassword') && !do_email('#txtEmail')) {
		$.ajaxSetup({
		    headers: {
		        'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
		    }
		});
		$.ajax({
			url: url,
			type: 'POST',
			data: form_data,
			contentType: false,
	        cache: false,
	        processData: false,
	        beforeSend:function(){
				$(boxid).html('<div class="info"><i class="fa fa-spinner fa-pulse fa-1x fa-fw"></i> Đang xử lý. Chờ xíu...</div>');
				if(showpopup == 'popup') {
					showPopupAlert(5000);
				}
				hideMessage($defind_config_modal_error_box, $defind_config_time_alert);
				scrollTop($defind_config_modalbox);
			},
			success: function(response){
				data = response;
				$(boxid).fadeIn('slow').html('<div class="'+data.status+'">'+getIcon(data.status)+' '+data.alert+'</div>');
				if(typeof data.message !== 'undefined' && data.message.length > 0) {
					loadError(data.message, boxerror);
				}
				if(app_debug() == false) {
					reload(data.status);
				}
			}
		});
	}

}

$(function() {

	$('.btngroupudateaction').on('click', function() {
		var $el = $('form#frmFormUpdate');
		updateGroup($el, 'groups/create', '.modal', 'popup');
	});

});

function updateGroup(formid, baseurl, divid, showpopup) {
	var showpopup 	= showpopup || 'popup';
	var type 		= type || app_action;
	var boxid		= divid+'-alert';
	var boxerror	= divid+'-message';
	var group_id 	= formid.find('[name="txtGroupId"]').val();
	var group_name 	= formid.find('[name="txtGroupName"]').val();
	var group_intro	= formid.find('[name="txtGroupIntro"]').val();
	//Xử lý phân quyền
	var permissions 		= getPermissionChecked(formid);
	//Append data
	var form_data = new FormData();
	form_data.append('type', type);
	form_data.append('group_id',group_id);
	form_data.append('group_name',group_name);
	form_data.append('group_intro',group_intro);
	form_data.append('permissions', JSON.stringify(permissions));
	//Xử lý file
	var url		= parse_url([app_url, app_page, baseurl]);
	if(!do_action_check(formid)) {
		$.ajaxSetup({
		    headers: {
		        'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
		    }
		});
		$.ajax({
			url: url,
			type: 'POST',
			data: form_data,
			contentType: false,
	        cache: false,
	        processData: false,
	        beforeSend:function(){
				$(boxid).html('<div class="info"><i class="fa fa-spinner fa-pulse fa-1x fa-fw"></i> Đang xử lý. Chờ xíu...</div>');
				if(showpopup == 'popup') {
					showPopupAlert(5000);
				}
				hideMessage($defind_config_modal_error_box, $defind_config_time_alert);
				scrollTop($defind_config_modalbox);
			},
			success: function(response){
				data = response;
				$(boxid).fadeIn('slow').html('<div class="'+data.status+'">'+getIcon(data.status)+' '+data.alert+'</div>');
				if(typeof data.message !== 'undefined' && data.message.length > 0) {
					loadError(data.message, boxerror);
				}
				if(app_debug() == false) {
					reload(data.status);
				}
			}
		});
	}
}

/**
 * UPDATE, REMOVE DATA
 * type: update, remove
 */
function permissionGroupUpdate(formid, baseurl, divid, showpopup) {
	var showpopup 	= showpopup || 'popup';
	var type 		= type || 'update';
	var boxid		= divid+'-alert';
	var boxerror	= divid+'-message';
	var permissionGroupData = [];
	var url 		= parse_url([app_url, app_page, baseurl]);
	if(!do_action_check(formid)) {
		//Xử lý dữ liệu
		$('.permissiongroup-list').each(function(i, v) {
			var id = $(this).attr('data-id');
			$(this).find('[name="PermissionGroupDetailID[]"]').each(function() {

				var detail_id 	= $(this).val();
				var detail_name = $('[name="PermissionGroupDetailName'+detail_id+'"]').val();

				permissionGroupData.push({
					group_id: id,
					detail_id: detail_id,
					detail_name:  detail_name
				});
			});
		});
		var form_data 	= new FormData();
		form_data.append('data', JSON.stringify(permissionGroupData));
		$.ajaxSetup({
			headers: {
				'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
			}
		});
		$.ajax({
			url: url,
			type: 'POST',
			data: form_data,
			contentType: false,
	        cache: false,
	        processData: false,
			beforeSend:function(){
				$(boxid).html('<div class="info"><i class="fa fa-spinner fa-pulse fa-1x fa-fw"></i> Đang xử lý. Chờ xíu...</div>');
				if(showpopup == 'popup') {
					showPopupAlert(5000);
				}
				hideMessage($defind_config_modal_error_box, $defind_config_time_alert);
				scrollTop($defind_config_modalbox);
			},
			success: function(response){
				data = response;
				$(boxid).fadeIn('slow').html('<div class="'+data.status+'">'+getIcon(data.status)+' '+data.alert+'</div>');
				if(typeof data.message !== 'undefined' && data.message.length > 0) {
					loadError(data.message, boxerror);
				}
				if(app_debug() == false) {
					reload(data.status);
				}
			}
		});
	}
}

/**
 * LOAD WIDGET INPUT
 */
function loadWidgetForm(widgetType) {

	var widgetType = widgetType || 'widget';

	$('.widget-items').fadeOut();
	$('.'+widgetType+'_show').fadeIn();

	$('[name="widget_modules"]').val(widgetType);
}

/**
 * THÊM / CẬP NHẬT WIDGET
 */
function updateWidget(formid, baseurl, divid, showpopup) {
    var showpopup       = showpopup || 'popup';
    var type            = type || app_action;
    var boxid           = divid+'-alert';
    var boxerror        = divid+'-message';
    var widget_id    	= $(formid).find('[name="widget_id"]').val();
    var widget_module   = $(formid).find('[name="widget_modules"]').val();
    var widget_name     = $(formid).find('[name="txtWidgetName"]').val();
    var widget_content	= getContent('editor');
    var widget_folder	= $(formid).find('[name="txtWidgetFolder"]').val();
    var widget_type		= $(formid).find('[name="sltWidgetType"]').val();
    var widget_state	= $(formid).find('[name="sltWidgetSate"]').val();
    var widget_qty		= $(formid).find('[name="txtWidgetQty"]').val();
    var widget_status	= $(formid).find('[name="rdoWidgetStatus"]:checked').val();
    var widget_column	= $(formid).find('[name="sltWidgetColumn"]').val();
    var widget_style    = $(formid).find('[name="txtWidgetStyle"]').val();
    var widget_show		= pushdata(formid, 'txtWidgetShow[]', ':checked'); //Show các nội dung cần thiết
    //Append data
    var form_data       = new FormData();
    form_data.append('widget_id', widget_id);
    form_data.append('widget_module', widget_module);
    form_data.append('widget_name', widget_name);
    form_data.append('widget_content', widget_content);
    form_data.append('widget_folder', widget_folder);
    form_data.append('widget_type', widget_type);
    form_data.append('widget_state', widget_state);
    form_data.append('widget_qty', widget_qty);
    form_data.append('widget_status', widget_status);
    form_data.append('widget_column', widget_column);
    form_data.append('widget_style', widget_style);
    form_data.append('widget_show', JSON.stringify(widget_show));
    //Xử lý file
    var url = parse_url([app_url, app_page, baseurl]);
    if(!do_action_check(formid)) {
        $.ajaxSetup({
            headers: {
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            }
        });
        $.ajax({
            url: url,
            type: 'POST',
            data: form_data,
            contentType: false,
            cache: false,
            processData: false,
            beforeSend:function(){
                $(boxid).html('<div class="info"><i class="fa fa-spinner fa-pulse fa-1x fa-fw"></i> Đang xử lý. Chờ xíu...</div>');
                if(showpopup == 'popup') {
                    showPopupAlert(5000);
                }
                hideMessage($defind_config_modal_error_box, $defind_config_time_alert);
                scrollTop($defind_config_modalbox);
            },
            success: function(response){
                data = response;
                $(boxid).fadeIn('slow').html('<div class="'+data.status+'">'+getIcon(data.status)+' '+data.alert+'</div>');
                if(typeof data.message !== 'undefined' && data.message.length > 0) {
                    loadError(data.message, boxerror);
                }
                if(app_debug() == false) {
                    reload(data.status);
                }
            }
        });
    }

}




if(app_module == 'permissiongroups' && app_action == 'configs') {

	//load permission group
	var baseurl = parse_url([app_page, app_module, 'json']);
	loadData([{themes: app_themes},{pages: app_module}], baseurl, '.permissiongroups-data', 'alert', app_module);

	//Load permission
	var baseurl = parse_url([app_page, app_module, 'permission']);
	loadData([{themes: app_themes},{pages: 'permissions'}], baseurl, '.group-permission', 'alert', 'grouppermission');


	//Cập nhật permission groups
	$('.btnSavePermissionGroup').on('click', function() {

		var $el     = 'form#frmFormUpdate';

		var baseurl = parse_url([app_module, 'update']);

		permissionGroupUpdate($el, baseurl, '.modal');


	});

	//Xóa permission group khỏi vị trí sắp xếp
	$(document).on('click', '.permissiongroup-remove-buttons', function() {

		var id = $(this).attr('data-id');

		$('.permission-group-item'+id).remove();

	});

}


//Load form widget mặc định
if(typeof app_module != 'undefined' && app_module == $config_module_widget) {

	//Tải form mặc định
	loadWidgetForm($config_module_widget); //mặc định là module widget

	if(app_action == $config_update_action) {

		var baseurl = parse_url([app_page, app_module, app_action, app_loadid]);

		loadData([{'widget_id': app_loadid}], baseurl, '.widget', 'alert', 'loadwidgetupdateinfo');

	}

	//Xóa widget
	$(document).on('click', '.btnRemoveAction', function() {
		var type 	= $(this).attr('data-type');
		var id 		= $(this).attr('data-id');
		var baseURL = parse_url([app_page, app_module, 'remove']);
		if(confirm_remove('Bạn có chắc muốn xóa dữ liệu? Dữ liệu sau khi xóa sẽ không thể phục hồi')) {
			removeData([{'id': id}], baseURL, '.modal');
		}
	});

}


$('.widgetTabs li a').on('click', function() {

	var widgetType = $(this).attr('data-type');

	loadWidgetForm(widgetType);

});


//Thực hiện cập nhật widget
$('.btnSaveWidgetAction').on('click', function() {

	var $el = $('form#frmFormUpdate');

	updateWidget($el, 'widget/update', '.modal'); //update or create

});

//Thêm File cho webstyles
$('.btnWebStyleSaveAction').on('click', function() {
	var $el 	= $('form#frmFormUpdate');
	var boxid 	= $('.modal-alert');
	var id = $(this).attr('data-id');
	var form_data	= new FormData();
	form_data.append('id', id);
	//Post image
	var file_data 	= $('#txtStyleFile'+id).prop('files')[0];
	form_data.append('file', file_data);
	//Xử lý file
    var url = parse_url([app_url, app_page, app_module, 'post']);
    if(!do_action_check($el)) {
        $.ajaxSetup({
            headers: {
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            }
        });
        $.ajax({
            url: url,
            type: 'POST',
            data: form_data,
            contentType: false,
            cache: false,
            processData: false,
            beforeSend:function(){
                $(boxid).html('<div class="info"><i class="fa fa-spinner fa-pulse fa-1x fa-fw"></i> Đang xử lý. Chờ xíu...</div>');
                showPopupAlert(5000);
                hideMessage($defind_config_modal_error_box, $defind_config_time_alert);
                scrollTop($defind_config_modalbox);
            },
            success: function(response){
                data = response;
                $(boxid).fadeIn('slow').html('<div class="'+data.status+'">'+getIcon(data.status)+' '+data.alert+'</div>');
                if(typeof data.message !== 'undefined' && data.message.length > 0) {
                    loadError(data.message, boxerror);
                }
                if(app_debug() == false) {
                    reload(data.status);
                }
            }
        });
    }
});

// @koala-prepend "../../aGlobal/js/config.js";
// @koala-prepend "modules/box_collaps.js";
// @koala-prepend "modules/field.functions.js";
// @koala-prepend "modules/mod.layout.js";
// @koala-prepend "modules/mod.layoutconfig.js";
// @koala-prepend "../../aGlobal/js/functions.js";
// @koala-prepend "../plugins/media/media.js";
// @koala-prepend "_autoload.js";
// @koala-prepend "add.field.js";
// @koala-prepend "moduleconfig.js";
// @koala-prepend "users.js";
// @koala-prepend "groups.js";

// @koala-prepend "modules/permissiongroups/_functions.js";
// @koala-prepend "modules/widget/_functions.js";
// @koala-prepend "modules/webstyles/_functions.js";

$(function() {

	//PERMISSION GROUPs
	// @koala-prepend "modules/permissiongroups/_autorun.js";
	// @koala-prepend "modules/widget/_autorun.js";
	// @koala-prepend "modules/webstyles/_autorun.js";

	//Load menu
	if(app_page == 'admin') {
		loadMenu('loadmenu', '.load-menu');
	}

	//Add file
	// $(document).on('click', '.btnAddMedia', function() {
	// 	var $modal = '#modalMedia';
	// 	$($modal).modal('show');
	// });

});

//Khởi tạo để sử dụng editor trong website
// useEditor();

//LOAD MENU
//pt: phân trang
function loadMenu(baseurl, divid, pt) {
	var url =  parse_url([app_url, app_page, baseurl]);
	var pt = pt || 'config';
 	//Append data
	var form_data = new FormData();
	form_data.append('type', 'load');
	form_data.append('pt', pt);
 	$.ajaxSetup({
 		headers: {
 			'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
 		}
 	});
 	$.ajax({
 		url: url,
 		type: 'POST',
 		data: form_data,
		contentType: false,
        cache: false,
        processData: false,
 		success: function(response){
 			$(divid).html(response);
 		},error:function(){
            if(app_debug == false) {
            	loadMenu('loadmenu', divid, pt);
            }
        }
 	});
 	return false;
}